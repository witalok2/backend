{"remainingRequest":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js!/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/mixins/fullscreen.js","dependencies":[{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/mixins/fullscreen.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import History from \"../history.js\";\nexport default {\n  props: {\n    fullscreen: Boolean\n  },\n  data: function data() {\n    return {\n      inFullscreen: false\n    };\n  },\n  watch: {\n    $route: function $route() {\n      this.exitFullscreen();\n    },\n    fullscreen: function fullscreen(v) {\n      if (this.inFullscreen !== v) {\n        this.toggleFullscreen();\n      }\n    },\n    inFullscreen: function inFullscreen(v) {\n      this.$emit('update:fullscreen', v);\n      this.$emit('fullscreen', v);\n    }\n  },\n  methods: {\n    toggleFullscreen: function toggleFullscreen() {\n      if (this.inFullscreen === true) {\n        this.exitFullscreen();\n      } else {\n        this.setFullscreen();\n      }\n    },\n    setFullscreen: function setFullscreen() {\n      if (this.inFullscreen === true) {\n        return;\n      }\n\n      this.inFullscreen = true;\n      this.container = this.$el.parentNode;\n      this.container.replaceChild(this.fullscreenFillerNode, this.$el);\n      document.body.appendChild(this.$el);\n      document.body.classList.add('q-body--fullscreen-mixin');\n      this.__historyFullscreen = {\n        handler: this.exitFullscreen\n      };\n      History.add(this.__historyFullscreen);\n    },\n    exitFullscreen: function exitFullscreen() {\n      var _this = this;\n\n      if (this.inFullscreen !== true) {\n        return;\n      }\n\n      if (this.__historyFullscreen !== void 0) {\n        History.remove(this.__historyFullscreen);\n        this.__historyFullscreen = void 0;\n      }\n\n      this.container.replaceChild(this.$el, this.fullscreenFillerNode);\n      document.body.classList.remove('q-body--fullscreen-mixin');\n      this.inFullscreen = false;\n\n      if (this.$el.scrollIntoView !== void 0) {\n        setTimeout(function () {\n          _this.$el.scrollIntoView();\n        });\n      }\n    }\n  },\n  beforeMount: function beforeMount() {\n    this.fullscreenFillerNode = document.createElement('span');\n  },\n  mounted: function mounted() {\n    this.fullscreen === true && this.setFullscreen();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.exitFullscreen();\n  }\n};",{"version":3,"sources":["/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/mixins/fullscreen.js"],"names":["History","props","fullscreen","Boolean","data","inFullscreen","watch","$route","exitFullscreen","v","toggleFullscreen","$emit","methods","setFullscreen","container","$el","parentNode","replaceChild","fullscreenFillerNode","document","body","appendChild","classList","add","__historyFullscreen","handler","remove","scrollIntoView","setTimeout","beforeMount","createElement","mounted","beforeDestroy"],"mappings":"AAAA,OAAOA,OAAP;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAEC;AADP,GADM;AAKbC,EAAAA,IALa,kBAKL;AACN,WAAO;AACLC,MAAAA,YAAY,EAAE;AADT,KAAP;AAGD,GATY;AAWbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MADK,oBACK;AACR,WAAKC,cAAL;AACD,KAHI;AAKLN,IAAAA,UALK,sBAKOO,CALP,EAKU;AACb,UAAI,KAAKJ,YAAL,KAAsBI,CAA1B,EAA6B;AAC3B,aAAKC,gBAAL;AACD;AACF,KATI;AAWLL,IAAAA,YAXK,wBAWSI,CAXT,EAWY;AACf,WAAKE,KAAL,CAAW,mBAAX,EAAgCF,CAAhC;AACA,WAAKE,KAAL,CAAW,YAAX,EAAyBF,CAAzB;AACD;AAdI,GAXM;AA4BbG,EAAAA,OAAO,EAAE;AACPF,IAAAA,gBADO,8BACa;AAClB,UAAI,KAAKL,YAAL,KAAsB,IAA1B,EAAgC;AAC9B,aAAKG,cAAL;AACD,OAFD,MAGK;AACH,aAAKK,aAAL;AACD;AACF,KARM;AAUPA,IAAAA,aAVO,2BAUU;AACf,UAAI,KAAKR,YAAL,KAAsB,IAA1B,EAAgC;AAC9B;AACD;;AAED,WAAKA,YAAL,GAAoB,IAApB;AACA,WAAKS,SAAL,GAAiB,KAAKC,GAAL,CAASC,UAA1B;AACA,WAAKF,SAAL,CAAeG,YAAf,CAA4B,KAAKC,oBAAjC,EAAuD,KAAKH,GAA5D;AACAI,MAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0B,KAAKN,GAA/B;AACAI,MAAAA,QAAQ,CAACC,IAAT,CAAcE,SAAd,CAAwBC,GAAxB,CAA4B,0BAA5B;AAEA,WAAKC,mBAAL,GAA2B;AACzBC,QAAAA,OAAO,EAAE,KAAKjB;AADW,OAA3B;AAGAR,MAAAA,OAAO,CAACuB,GAAR,CAAY,KAAKC,mBAAjB;AACD,KAzBM;AA2BPhB,IAAAA,cA3BO,4BA2BW;AAAA;;AAChB,UAAI,KAAKH,YAAL,KAAsB,IAA1B,EAAgC;AAC9B;AACD;;AAED,UAAI,KAAKmB,mBAAL,KAA6B,KAAK,CAAtC,EAAyC;AACvCxB,QAAAA,OAAO,CAAC0B,MAAR,CAAe,KAAKF,mBAApB;AACA,aAAKA,mBAAL,GAA2B,KAAK,CAAhC;AACD;;AACD,WAAKV,SAAL,CAAeG,YAAf,CAA4B,KAAKF,GAAjC,EAAsC,KAAKG,oBAA3C;AACAC,MAAAA,QAAQ,CAACC,IAAT,CAAcE,SAAd,CAAwBI,MAAxB,CAA+B,0BAA/B;AACA,WAAKrB,YAAL,GAAoB,KAApB;;AAEA,UAAI,KAAKU,GAAL,CAASY,cAAT,KAA4B,KAAK,CAArC,EAAwC;AACtCC,QAAAA,UAAU,CAAC,YAAM;AAAE,UAAA,KAAI,CAACb,GAAL,CAASY,cAAT;AAA2B,SAApC,CAAV;AACD;AACF;AA3CM,GA5BI;AA0EbE,EAAAA,WA1Ea,yBA0EE;AACb,SAAKX,oBAAL,GAA4BC,QAAQ,CAACW,aAAT,CAAuB,MAAvB,CAA5B;AACD,GA5EY;AA8EbC,EAAAA,OA9Ea,qBA8EF;AACT,SAAK7B,UAAL,KAAoB,IAApB,IAA4B,KAAKW,aAAL,EAA5B;AACD,GAhFY;AAkFbmB,EAAAA,aAlFa,2BAkFI;AACf,SAAKxB,cAAL;AACD;AApFY,CAAf","sourcesContent":["import History from '../history.js'\n\nexport default {\n  props: {\n    fullscreen: Boolean\n  },\n\n  data () {\n    return {\n      inFullscreen: false\n    }\n  },\n\n  watch: {\n    $route () {\n      this.exitFullscreen()\n    },\n\n    fullscreen (v) {\n      if (this.inFullscreen !== v) {\n        this.toggleFullscreen()\n      }\n    },\n\n    inFullscreen (v) {\n      this.$emit('update:fullscreen', v)\n      this.$emit('fullscreen', v)\n    }\n  },\n\n  methods: {\n    toggleFullscreen () {\n      if (this.inFullscreen === true) {\n        this.exitFullscreen()\n      }\n      else {\n        this.setFullscreen()\n      }\n    },\n\n    setFullscreen () {\n      if (this.inFullscreen === true) {\n        return\n      }\n\n      this.inFullscreen = true\n      this.container = this.$el.parentNode\n      this.container.replaceChild(this.fullscreenFillerNode, this.$el)\n      document.body.appendChild(this.$el)\n      document.body.classList.add('q-body--fullscreen-mixin')\n\n      this.__historyFullscreen = {\n        handler: this.exitFullscreen\n      }\n      History.add(this.__historyFullscreen)\n    },\n\n    exitFullscreen () {\n      if (this.inFullscreen !== true) {\n        return\n      }\n\n      if (this.__historyFullscreen !== void 0) {\n        History.remove(this.__historyFullscreen)\n        this.__historyFullscreen = void 0\n      }\n      this.container.replaceChild(this.$el, this.fullscreenFillerNode)\n      document.body.classList.remove('q-body--fullscreen-mixin')\n      this.inFullscreen = false\n\n      if (this.$el.scrollIntoView !== void 0) {\n        setTimeout(() => { this.$el.scrollIntoView() })\n      }\n    }\n  },\n\n  beforeMount () {\n    this.fullscreenFillerNode = document.createElement('span')\n  },\n\n  mounted () {\n    this.fullscreen === true && this.setFullscreen()\n  },\n\n  beforeDestroy () {\n    this.exitFullscreen()\n  }\n}\n"]}]}