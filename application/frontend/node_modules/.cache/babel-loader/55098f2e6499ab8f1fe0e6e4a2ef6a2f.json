{"remainingRequest":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js!/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/utils/colors.js","dependencies":[{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/utils/colors.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.to-string\";\nexport function rgbToHex(_ref) {\n  var r = _ref.r,\n      g = _ref.g,\n      b = _ref.b,\n      a = _ref.a;\n  var alpha = a !== void 0;\n  r = Math.round(r);\n  g = Math.round(g);\n  b = Math.round(b);\n\n  if (r > 255 || g > 255 || b > 255 || alpha && a > 100) {\n    throw new TypeError('Expected 3 numbers below 256 (and optionally one below 100)');\n  }\n\n  a = alpha ? (Math.round(255 * a / 100) | 1 << 8).toString(16).slice(1) : '';\n  return '#' + (b | g << 8 | r << 16 | 1 << 24).toString(16).slice(1) + a;\n}\nexport function rgbToString(_ref2) {\n  var r = _ref2.r,\n      g = _ref2.g,\n      b = _ref2.b,\n      a = _ref2.a;\n  return \"rgb\".concat(a !== void 0 ? 'a' : '', \"(\").concat(r, \",\").concat(g, \",\").concat(b).concat(a !== void 0 ? ',' + a / 100 : '', \")\");\n}\nexport function stringToRgb(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  str = str.replace(/ /g, '');\n\n  if (str.startsWith('#')) {\n    return hexToRgb(str);\n  }\n\n  var model = str.substring(str.indexOf('(') + 1, str.length - 1).split(',');\n  return {\n    r: parseInt(model[0], 10),\n    g: parseInt(model[1], 10),\n    b: parseInt(model[2], 10),\n    a: model[3] !== void 0 ? parseFloat(model[3]) * 100 : void 0\n  };\n}\nexport function hexToRgb(hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  hex = hex.replace(/^#/, '');\n\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  } else if (hex.length === 4) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n  }\n\n  var num = parseInt(hex, 16);\n  return hex.length > 6 ? {\n    r: num >> 24 & 255,\n    g: num >> 16 & 255,\n    b: num >> 8 & 255,\n    a: Math.round((num & 255) / 2.55)\n  } : {\n    r: num >> 16,\n    g: num >> 8 & 255,\n    b: num & 255\n  };\n}\nexport function hsvToRgb(_ref3) {\n  var h = _ref3.h,\n      s = _ref3.s,\n      v = _ref3.v,\n      a = _ref3.a;\n  var r, g, b, i, f, p, q, t;\n  s = s / 100;\n  v = v / 100;\n  h = h / 360;\n  i = Math.floor(h * 6);\n  f = h * 6 - i;\n  p = v * (1 - s);\n  q = v * (1 - f * s);\n  t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255),\n    a: a\n  };\n}\nexport function rgbToHsv(_ref4) {\n  var r = _ref4.r,\n      g = _ref4.g,\n      b = _ref4.b,\n      a = _ref4.a;\n  var max = Math.max(r, g, b),\n      min = Math.min(r, g, b),\n      d = max - min,\n      h,\n      s = max === 0 ? 0 : d / max,\n      v = max / 255;\n\n  switch (max) {\n    case min:\n      h = 0;\n      break;\n\n    case r:\n      h = g - b + d * (g < b ? 6 : 0);\n      h /= 6 * d;\n      break;\n\n    case g:\n      h = b - r + d * 2;\n      h /= 6 * d;\n      break;\n\n    case b:\n      h = r - g + d * 4;\n      h /= 6 * d;\n      break;\n  }\n\n  return {\n    h: Math.round(h * 360),\n    s: Math.round(s * 100),\n    v: Math.round(v * 100),\n    a: a\n  };\n}\nvar reRGBA = /^\\s*rgb(a)?\\s*\\((\\s*(\\d+)\\s*,\\s*?){2}(\\d+)\\s*,?\\s*([01]?\\.?\\d*?)?\\s*\\)\\s*$/;\nexport function textToRgb(color) {\n  if (typeof color !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  var m = reRGBA.exec(color);\n\n  if (m) {\n    var rgb = {\n      r: Math.min(255, parseInt(m[2], 10)),\n      g: Math.min(255, parseInt(m[3], 10)),\n      b: Math.min(255, parseInt(m[4], 10))\n    };\n\n    if (m[1]) {\n      rgb.a = Math.min(1, parseFloat(m[5]));\n    }\n\n    return rgb;\n  }\n\n  return hexToRgb(color);\n}\n/* works as darken if percent < 0 */\n\nexport function lighten(color, percent) {\n  if (typeof color !== 'string') {\n    throw new TypeError('Expected a string as color');\n  }\n\n  if (typeof percent !== 'number') {\n    throw new TypeError('Expected a numeric percent');\n  }\n\n  var rgb = textToRgb(color),\n      t = percent < 0 ? 0 : 255,\n      p = Math.abs(percent) / 100,\n      R = rgb.r,\n      G = rgb.g,\n      B = rgb.b;\n  return '#' + (0x1000000 + (Math.round((t - R) * p) + R) * 0x10000 + (Math.round((t - G) * p) + G) * 0x100 + (Math.round((t - B) * p) + B)).toString(16).slice(1);\n}\nexport function luminosity(color) {\n  if (typeof color !== 'string' && (!color || color.r === void 0)) {\n    throw new TypeError('Expected a string or a {r, g, b} object as color');\n  }\n\n  var rgb = typeof color === 'string' ? textToRgb(color) : color,\n      r = rgb.r / 255,\n      g = rgb.g / 255,\n      b = rgb.b / 255,\n      R = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4),\n      G = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4),\n      B = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n  return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n}\nexport function setBrand(color, value) {\n  var element = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document.body;\n\n  if (typeof color !== 'string') {\n    throw new TypeError('Expected a string as color');\n  }\n\n  if (typeof value !== 'string') {\n    throw new TypeError('Expected a string as value');\n  }\n\n  if (!(element instanceof Element)) {\n    throw new TypeError('Expected a DOM element');\n  }\n\n  element.style.setProperty(\"--q-color-\".concat(color), value);\n\n  switch (color) {\n    case 'negative':\n    case 'warning':\n      element.style.setProperty(\"--q-color-\".concat(color, \"-l\"), lighten(value, 46));\n      break;\n\n    case 'light':\n      element.style.setProperty(\"--q-color-\".concat(color, \"-d\"), lighten(value, -10));\n  }\n}\nexport function getBrand(color) {\n  var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.body;\n\n  if (typeof color !== 'string') {\n    throw new TypeError('Expected a string as color');\n  }\n\n  if (!(element instanceof Element)) {\n    throw new TypeError('Expected a DOM element');\n  }\n\n  return getComputedStyle(element).getPropertyValue(\"--q-color-\".concat(color)).trim() || null;\n}\nexport default {\n  rgbToHex: rgbToHex,\n  hexToRgb: hexToRgb,\n  hsvToRgb: hsvToRgb,\n  rgbToHsv: rgbToHsv,\n  textToRgb: textToRgb,\n  lighten: lighten,\n  luminosity: luminosity,\n  setBrand: setBrand,\n  getBrand: getBrand\n};",{"version":3,"sources":["/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/utils/colors.js"],"names":["rgbToHex","r","g","b","a","alpha","Math","round","TypeError","toString","slice","rgbToString","stringToRgb","str","replace","startsWith","hexToRgb","model","substring","indexOf","length","split","parseInt","parseFloat","hex","num","hsvToRgb","h","s","v","i","f","p","q","t","floor","rgbToHsv","max","min","d","reRGBA","textToRgb","color","m","exec","rgb","lighten","percent","abs","R","G","B","luminosity","pow","setBrand","value","element","document","body","Element","style","setProperty","getBrand","getComputedStyle","getPropertyValue","trim"],"mappings":";;;;AAAA,OAAO,SAASA,QAAT,OAAmC;AAAA,MAAdC,CAAc,QAAdA,CAAc;AAAA,MAAXC,CAAW,QAAXA,CAAW;AAAA,MAARC,CAAQ,QAARA,CAAQ;AAAA,MAALC,CAAK,QAALA,CAAK;AACxC,MAAMC,KAAK,GAAGD,CAAC,KAAK,KAAK,CAAzB;AAEAH,EAAAA,CAAC,GAAGK,IAAI,CAACC,KAAL,CAAWN,CAAX,CAAJ;AACAC,EAAAA,CAAC,GAAGI,IAAI,CAACC,KAAL,CAAWL,CAAX,CAAJ;AACAC,EAAAA,CAAC,GAAGG,IAAI,CAACC,KAAL,CAAWJ,CAAX,CAAJ;;AAEA,MACEF,CAAC,GAAG,GAAJ,IACAC,CAAC,GAAG,GADJ,IAEAC,CAAC,GAAG,GAFJ,IAGCE,KAAK,IAAID,CAAC,GAAG,GAJhB,EAKE;AACA,UAAM,IAAII,SAAJ,CAAc,6DAAd,CAAN;AACD;;AAEDJ,EAAAA,CAAC,GAAGC,KAAK,GACL,CAACC,IAAI,CAACC,KAAL,CAAW,MAAMH,CAAN,GAAU,GAArB,IAA4B,KAAK,CAAlC,EAAqCK,QAArC,CAA8C,EAA9C,EAAkDC,KAAlD,CAAwD,CAAxD,CADK,GAEL,EAFJ;AAIA,SAAO,MAAM,CAAEP,CAAC,GAAGD,CAAC,IAAI,CAAT,GAAaD,CAAC,IAAI,EAAnB,GAAyB,KAAK,EAA/B,EAAmCQ,QAAnC,CAA4C,EAA5C,EAAgDC,KAAhD,CAAsD,CAAtD,CAAN,GAAiEN,CAAxE;AACD;AAED,OAAO,SAASO,WAAT,QAAsC;AAAA,MAAdV,CAAc,SAAdA,CAAc;AAAA,MAAXC,CAAW,SAAXA,CAAW;AAAA,MAARC,CAAQ,SAARA,CAAQ;AAAA,MAALC,CAAK,SAALA,CAAK;AAC3C,sBAAaA,CAAC,KAAK,KAAK,CAAX,GAAe,GAAf,GAAqB,EAAlC,cAAwCH,CAAxC,cAA6CC,CAA7C,cAAkDC,CAAlD,SAAsDC,CAAC,KAAK,KAAK,CAAX,GAAe,MAAOA,CAAC,GAAG,GAA1B,GAAiC,EAAvF;AACD;AAED,OAAO,SAASQ,WAAT,CAAsBC,GAAtB,EAA2B;AAChC,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAIL,SAAJ,CAAc,mBAAd,CAAN;AACD;;AAEDK,EAAAA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,CAAN;;AAEA,MAAID,GAAG,CAACE,UAAJ,CAAe,GAAf,CAAJ,EAAyB;AACvB,WAAOC,QAAQ,CAACH,GAAD,CAAf;AACD;;AAED,MAAMI,KAAK,GAAGJ,GAAG,CAACK,SAAJ,CAAcL,GAAG,CAACM,OAAJ,CAAY,GAAZ,IAAmB,CAAjC,EAAoCN,GAAG,CAACO,MAAJ,GAAa,CAAjD,EAAoDC,KAApD,CAA0D,GAA1D,CAAd;AAEA,SAAO;AACLpB,IAAAA,CAAC,EAAEqB,QAAQ,CAACL,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CADN;AAELf,IAAAA,CAAC,EAAEoB,QAAQ,CAACL,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAFN;AAGLd,IAAAA,CAAC,EAAEmB,QAAQ,CAACL,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAHN;AAILb,IAAAA,CAAC,EAAEa,KAAK,CAAC,CAAD,CAAL,KAAa,KAAK,CAAlB,GAAsBM,UAAU,CAACN,KAAK,CAAC,CAAD,CAAN,CAAV,GAAuB,GAA7C,GAAmD,KAAK;AAJtD,GAAP;AAMD;AAED,OAAO,SAASD,QAAT,CAAmBQ,GAAnB,EAAwB;AAC7B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAIhB,SAAJ,CAAc,mBAAd,CAAN;AACD;;AAEDgB,EAAAA,GAAG,GAAGA,GAAG,CAACV,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,CAAN;;AAEA,MAAIU,GAAG,CAACJ,MAAJ,KAAe,CAAnB,EAAsB;AACpBI,IAAAA,GAAG,GAAGA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,GAAkBA,GAAG,CAAC,CAAD,CAArB,GAA2BA,GAAG,CAAC,CAAD,CAA9B,GAAoCA,GAAG,CAAC,CAAD,CAAvC,GAA6CA,GAAG,CAAC,CAAD,CAAtD;AACD,GAFD,MAGK,IAAIA,GAAG,CAACJ,MAAJ,KAAe,CAAnB,EAAsB;AACzBI,IAAAA,GAAG,GAAGA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,GAAkBA,GAAG,CAAC,CAAD,CAArB,GAA2BA,GAAG,CAAC,CAAD,CAA9B,GAAoCA,GAAG,CAAC,CAAD,CAAvC,GAA6CA,GAAG,CAAC,CAAD,CAAhD,GAAsDA,GAAG,CAAC,CAAD,CAAzD,GAA+DA,GAAG,CAAC,CAAD,CAAxE;AACD;;AAED,MAAIC,GAAG,GAAGH,QAAQ,CAACE,GAAD,EAAM,EAAN,CAAlB;AAEA,SAAOA,GAAG,CAACJ,MAAJ,GAAa,CAAb,GACH;AAAEnB,IAAAA,CAAC,EAAEwB,GAAG,IAAI,EAAP,GAAY,GAAjB;AAAsBvB,IAAAA,CAAC,EAAEuB,GAAG,IAAI,EAAP,GAAY,GAArC;AAA0CtB,IAAAA,CAAC,EAAEsB,GAAG,IAAI,CAAP,GAAW,GAAxD;AAA6DrB,IAAAA,CAAC,EAAEE,IAAI,CAACC,KAAL,CAAW,CAACkB,GAAG,GAAG,GAAP,IAAc,IAAzB;AAAhE,GADG,GAEH;AAAExB,IAAAA,CAAC,EAAEwB,GAAG,IAAI,EAAZ;AAAgBvB,IAAAA,CAAC,EAAEuB,GAAG,IAAI,CAAP,GAAW,GAA9B;AAAmCtB,IAAAA,CAAC,EAAEsB,GAAG,GAAG;AAA5C,GAFJ;AAGD;AAED,OAAO,SAASC,QAAT,QAAmC;AAAA,MAAdC,CAAc,SAAdA,CAAc;AAAA,MAAXC,CAAW,SAAXA,CAAW;AAAA,MAARC,CAAQ,SAARA,CAAQ;AAAA,MAALzB,CAAK,SAALA,CAAK;AACxC,MAAIH,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa2B,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyBC,CAAzB;AACAN,EAAAA,CAAC,GAAGA,CAAC,GAAG,GAAR;AACAC,EAAAA,CAAC,GAAGA,CAAC,GAAG,GAAR;AAEAF,EAAAA,CAAC,GAAGA,CAAC,GAAG,GAAR;AACAG,EAAAA,CAAC,GAAGxB,IAAI,CAAC6B,KAAL,CAAWR,CAAC,GAAG,CAAf,CAAJ;AACAI,EAAAA,CAAC,GAAGJ,CAAC,GAAG,CAAJ,GAAQG,CAAZ;AACAE,EAAAA,CAAC,GAAGH,CAAC,IAAI,IAAID,CAAR,CAAL;AACAK,EAAAA,CAAC,GAAGJ,CAAC,IAAI,IAAIE,CAAC,GAAGH,CAAZ,CAAL;AACAM,EAAAA,CAAC,GAAGL,CAAC,IAAI,IAAI,CAAC,IAAIE,CAAL,IAAUH,CAAlB,CAAL;;AAEA,UAAQE,CAAC,GAAG,CAAZ;AACE,SAAK,CAAL;AACE7B,MAAAA,CAAC,GAAG4B,CAAJ;AACA3B,MAAAA,CAAC,GAAGgC,CAAJ;AACA/B,MAAAA,CAAC,GAAG6B,CAAJ;AACA;;AACF,SAAK,CAAL;AACE/B,MAAAA,CAAC,GAAGgC,CAAJ;AACA/B,MAAAA,CAAC,GAAG2B,CAAJ;AACA1B,MAAAA,CAAC,GAAG6B,CAAJ;AACA;;AACF,SAAK,CAAL;AACE/B,MAAAA,CAAC,GAAG+B,CAAJ;AACA9B,MAAAA,CAAC,GAAG2B,CAAJ;AACA1B,MAAAA,CAAC,GAAG+B,CAAJ;AACA;;AACF,SAAK,CAAL;AACEjC,MAAAA,CAAC,GAAG+B,CAAJ;AACA9B,MAAAA,CAAC,GAAG+B,CAAJ;AACA9B,MAAAA,CAAC,GAAG0B,CAAJ;AACA;;AACF,SAAK,CAAL;AACE5B,MAAAA,CAAC,GAAGiC,CAAJ;AACAhC,MAAAA,CAAC,GAAG8B,CAAJ;AACA7B,MAAAA,CAAC,GAAG0B,CAAJ;AACA;;AACF,SAAK,CAAL;AACE5B,MAAAA,CAAC,GAAG4B,CAAJ;AACA3B,MAAAA,CAAC,GAAG8B,CAAJ;AACA7B,MAAAA,CAAC,GAAG8B,CAAJ;AACA;AA9BJ;;AAiCA,SAAO;AACLhC,IAAAA,CAAC,EAAEK,IAAI,CAACC,KAAL,CAAWN,CAAC,GAAG,GAAf,CADE;AAELC,IAAAA,CAAC,EAAEI,IAAI,CAACC,KAAL,CAAWL,CAAC,GAAG,GAAf,CAFE;AAGLC,IAAAA,CAAC,EAAEG,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,GAAf,CAHE;AAILC,IAAAA,CAAC,EAADA;AAJK,GAAP;AAMD;AAED,OAAO,SAASgC,QAAT,QAAmC;AAAA,MAAdnC,CAAc,SAAdA,CAAc;AAAA,MAAXC,CAAW,SAAXA,CAAW;AAAA,MAARC,CAAQ,SAARA,CAAQ;AAAA,MAALC,CAAK,SAALA,CAAK;AACxC,MACEiC,GAAG,GAAG/B,IAAI,CAAC+B,GAAL,CAASpC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,CADR;AAAA,MAC2BmC,GAAG,GAAGhC,IAAI,CAACgC,GAAL,CAASrC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,CADjC;AAAA,MAEEoC,CAAC,GAAGF,GAAG,GAAGC,GAFZ;AAAA,MAGEX,CAHF;AAAA,MAIEC,CAAC,GAAIS,GAAG,KAAK,CAAR,GAAY,CAAZ,GAAgBE,CAAC,GAAGF,GAJ3B;AAAA,MAKER,CAAC,GAAGQ,GAAG,GAAG,GALZ;;AAOA,UAAQA,GAAR;AACE,SAAKC,GAAL;AACEX,MAAAA,CAAC,GAAG,CAAJ;AACA;;AACF,SAAK1B,CAAL;AACE0B,MAAAA,CAAC,GAAIzB,CAAC,GAAGC,CAAL,GAAUoC,CAAC,IAAIrC,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAY,CAAhB,CAAf;AACAwB,MAAAA,CAAC,IAAI,IAAIY,CAAT;AACA;;AACF,SAAKrC,CAAL;AACEyB,MAAAA,CAAC,GAAIxB,CAAC,GAAGF,CAAL,GAAUsC,CAAC,GAAG,CAAlB;AACAZ,MAAAA,CAAC,IAAI,IAAIY,CAAT;AACA;;AACF,SAAKpC,CAAL;AACEwB,MAAAA,CAAC,GAAI1B,CAAC,GAAGC,CAAL,GAAUqC,CAAC,GAAG,CAAlB;AACAZ,MAAAA,CAAC,IAAI,IAAIY,CAAT;AACA;AAfJ;;AAkBA,SAAO;AACLZ,IAAAA,CAAC,EAAErB,IAAI,CAACC,KAAL,CAAWoB,CAAC,GAAG,GAAf,CADE;AAELC,IAAAA,CAAC,EAAEtB,IAAI,CAACC,KAAL,CAAWqB,CAAC,GAAG,GAAf,CAFE;AAGLC,IAAAA,CAAC,EAAEvB,IAAI,CAACC,KAAL,CAAWsB,CAAC,GAAG,GAAf,CAHE;AAILzB,IAAAA,CAAC,EAADA;AAJK,GAAP;AAMD;AAED,IAAMoC,MAAM,GAAG,4EAAf;AAEA,OAAO,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AAChC,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAIlC,SAAJ,CAAc,mBAAd,CAAN;AACD;;AAED,MAAMmC,CAAC,GAAGH,MAAM,CAACI,IAAP,CAAYF,KAAZ,CAAV;;AACA,MAAIC,CAAJ,EAAO;AACL,QAAME,GAAG,GAAG;AACV5C,MAAAA,CAAC,EAAEK,IAAI,CAACgC,GAAL,CAAS,GAAT,EAAchB,QAAQ,CAACqB,CAAC,CAAC,CAAD,CAAF,EAAO,EAAP,CAAtB,CADO;AAEVzC,MAAAA,CAAC,EAAEI,IAAI,CAACgC,GAAL,CAAS,GAAT,EAAchB,QAAQ,CAACqB,CAAC,CAAC,CAAD,CAAF,EAAO,EAAP,CAAtB,CAFO;AAGVxC,MAAAA,CAAC,EAAEG,IAAI,CAACgC,GAAL,CAAS,GAAT,EAAchB,QAAQ,CAACqB,CAAC,CAAC,CAAD,CAAF,EAAO,EAAP,CAAtB;AAHO,KAAZ;;AAKA,QAAIA,CAAC,CAAC,CAAD,CAAL,EAAU;AACRE,MAAAA,GAAG,CAACzC,CAAJ,GAAQE,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAYf,UAAU,CAACoB,CAAC,CAAC,CAAD,CAAF,CAAtB,CAAR;AACD;;AACD,WAAOE,GAAP;AACD;;AACD,SAAO7B,QAAQ,CAAC0B,KAAD,CAAf;AACD;AAED;;AACA,OAAO,SAASI,OAAT,CAAkBJ,KAAlB,EAAyBK,OAAzB,EAAkC;AACvC,MAAI,OAAOL,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAIlC,SAAJ,CAAc,4BAAd,CAAN;AACD;;AACD,MAAI,OAAOuC,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,UAAM,IAAIvC,SAAJ,CAAc,4BAAd,CAAN;AACD;;AAED,MAAMqC,GAAG,GAAGJ,SAAS,CAACC,KAAD,CAArB;AAAA,MACER,CAAC,GAAGa,OAAO,GAAG,CAAV,GAAc,CAAd,GAAkB,GADxB;AAAA,MAEEf,CAAC,GAAG1B,IAAI,CAAC0C,GAAL,CAASD,OAAT,IAAoB,GAF1B;AAAA,MAGEE,CAAC,GAAGJ,GAAG,CAAC5C,CAHV;AAAA,MAIEiD,CAAC,GAAGL,GAAG,CAAC3C,CAJV;AAAA,MAKEiD,CAAC,GAAGN,GAAG,CAAC1C,CALV;AAOA,SAAO,MAAM,CACX,YAAY,CAACG,IAAI,CAACC,KAAL,CAAW,CAAC2B,CAAC,GAAGe,CAAL,IAAUjB,CAArB,IAA0BiB,CAA3B,IAAgC,OAA5C,GACA,CAAC3C,IAAI,CAACC,KAAL,CAAW,CAAC2B,CAAC,GAAGgB,CAAL,IAAUlB,CAArB,IAA0BkB,CAA3B,IAAgC,KADhC,IAEC5C,IAAI,CAACC,KAAL,CAAW,CAAC2B,CAAC,GAAGiB,CAAL,IAAUnB,CAArB,IAA0BmB,CAF3B,CADW,EAIX1C,QAJW,CAIF,EAJE,EAIEC,KAJF,CAIQ,CAJR,CAAb;AAKD;AAED,OAAO,SAAS0C,UAAT,CAAqBV,KAArB,EAA4B;AACjC,MAAI,OAAOA,KAAP,KAAiB,QAAjB,KAA8B,CAACA,KAAD,IAAUA,KAAK,CAACzC,CAAN,KAAY,KAAK,CAAzD,CAAJ,EAAiE;AAC/D,UAAM,IAAIO,SAAJ,CAAc,kDAAd,CAAN;AACD;;AAED,MACEqC,GAAG,GAAG,OAAOH,KAAP,KAAiB,QAAjB,GAA4BD,SAAS,CAACC,KAAD,CAArC,GAA+CA,KADvD;AAAA,MAEEzC,CAAC,GAAG4C,GAAG,CAAC5C,CAAJ,GAAQ,GAFd;AAAA,MAGEC,CAAC,GAAG2C,GAAG,CAAC3C,CAAJ,GAAQ,GAHd;AAAA,MAIEC,CAAC,GAAG0C,GAAG,CAAC1C,CAAJ,GAAQ,GAJd;AAAA,MAKE8C,CAAC,GAAGhD,CAAC,IAAI,OAAL,GAAeA,CAAC,GAAG,KAAnB,GAA2BK,IAAI,CAAC+C,GAAL,CAAS,CAACpD,CAAC,GAAG,KAAL,IAAc,KAAvB,EAA8B,GAA9B,CALjC;AAAA,MAMEiD,CAAC,GAAGhD,CAAC,IAAI,OAAL,GAAeA,CAAC,GAAG,KAAnB,GAA2BI,IAAI,CAAC+C,GAAL,CAAS,CAACnD,CAAC,GAAG,KAAL,IAAc,KAAvB,EAA8B,GAA9B,CANjC;AAAA,MAOEiD,CAAC,GAAGhD,CAAC,IAAI,OAAL,GAAeA,CAAC,GAAG,KAAnB,GAA2BG,IAAI,CAAC+C,GAAL,CAAS,CAAClD,CAAC,GAAG,KAAL,IAAc,KAAvB,EAA8B,GAA9B,CAPjC;AAQA,SAAO,SAAS8C,CAAT,GAAa,SAASC,CAAtB,GAA0B,SAASC,CAA1C;AACD;AAED,OAAO,SAASG,QAAT,CAAmBZ,KAAnB,EAA0Ba,KAA1B,EAA0D;AAAA,MAAzBC,OAAyB,uEAAfC,QAAQ,CAACC,IAAM;;AAC/D,MAAI,OAAOhB,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAIlC,SAAJ,CAAc,4BAAd,CAAN;AACD;;AACD,MAAI,OAAO+C,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAI/C,SAAJ,CAAc,4BAAd,CAAN;AACD;;AACD,MAAI,EAAEgD,OAAO,YAAYG,OAArB,CAAJ,EAAmC;AACjC,UAAM,IAAInD,SAAJ,CAAc,wBAAd,CAAN;AACD;;AAEDgD,EAAAA,OAAO,CAACI,KAAR,CAAcC,WAAd,qBAAuCnB,KAAvC,GAAgDa,KAAhD;;AACA,UAAQb,KAAR;AACE,SAAK,UAAL;AACA,SAAK,SAAL;AACEc,MAAAA,OAAO,CAACI,KAAR,CAAcC,WAAd,qBAAuCnB,KAAvC,SAAkDI,OAAO,CAACS,KAAD,EAAQ,EAAR,CAAzD;AACA;;AACF,SAAK,OAAL;AACEC,MAAAA,OAAO,CAACI,KAAR,CAAcC,WAAd,qBAAuCnB,KAAvC,SAAkDI,OAAO,CAACS,KAAD,EAAQ,CAAC,EAAT,CAAzD;AANJ;AAQD;AAED,OAAO,SAASO,QAAT,CAAmBpB,KAAnB,EAAmD;AAAA,MAAzBc,OAAyB,uEAAfC,QAAQ,CAACC,IAAM;;AACxD,MAAI,OAAOhB,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAIlC,SAAJ,CAAc,4BAAd,CAAN;AACD;;AACD,MAAI,EAAEgD,OAAO,YAAYG,OAArB,CAAJ,EAAmC;AACjC,UAAM,IAAInD,SAAJ,CAAc,wBAAd,CAAN;AACD;;AAED,SAAOuD,gBAAgB,CAACP,OAAD,CAAhB,CAA0BQ,gBAA1B,qBAAwDtB,KAAxD,GAAiEuB,IAAjE,MAA2E,IAAlF;AACD;AAED,eAAe;AACbjE,EAAAA,QAAQ,EAARA,QADa;AAEbgB,EAAAA,QAAQ,EAARA,QAFa;AAGbU,EAAAA,QAAQ,EAARA,QAHa;AAIbU,EAAAA,QAAQ,EAARA,QAJa;AAKbK,EAAAA,SAAS,EAATA,SALa;AAMbK,EAAAA,OAAO,EAAPA,OANa;AAObM,EAAAA,UAAU,EAAVA,UAPa;AAQbE,EAAAA,QAAQ,EAARA,QARa;AASbQ,EAAAA,QAAQ,EAARA;AATa,CAAf","sourcesContent":["export function rgbToHex ({ r, g, b, a }) {\n  const alpha = a !== void 0\n\n  r = Math.round(r)\n  g = Math.round(g)\n  b = Math.round(b)\n\n  if (\n    r > 255 ||\n    g > 255 ||\n    b > 255 ||\n    (alpha && a > 100)\n  ) {\n    throw new TypeError('Expected 3 numbers below 256 (and optionally one below 100)')\n  }\n\n  a = alpha\n    ? (Math.round(255 * a / 100) | 1 << 8).toString(16).slice(1)\n    : ''\n\n  return '#' + ((b | g << 8 | r << 16) | 1 << 24).toString(16).slice(1) + a\n}\n\nexport function rgbToString ({ r, g, b, a }) {\n  return `rgb${a !== void 0 ? 'a' : ''}(${r},${g},${b}${a !== void 0 ? ',' + (a / 100) : ''})`\n}\n\nexport function stringToRgb (str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('Expected a string')\n  }\n\n  str = str.replace(/ /g, '')\n\n  if (str.startsWith('#')) {\n    return hexToRgb(str)\n  }\n\n  const model = str.substring(str.indexOf('(') + 1, str.length - 1).split(',')\n\n  return {\n    r: parseInt(model[0], 10),\n    g: parseInt(model[1], 10),\n    b: parseInt(model[2], 10),\n    a: model[3] !== void 0 ? parseFloat(model[3]) * 100 : void 0\n  }\n}\n\nexport function hexToRgb (hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('Expected a string')\n  }\n\n  hex = hex.replace(/^#/, '')\n\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n  }\n  else if (hex.length === 4) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3]\n  }\n\n  let num = parseInt(hex, 16)\n\n  return hex.length > 6\n    ? { r: num >> 24 & 255, g: num >> 16 & 255, b: num >> 8 & 255, a: Math.round((num & 255) / 2.55) }\n    : { r: num >> 16, g: num >> 8 & 255, b: num & 255 }\n}\n\nexport function hsvToRgb ({ h, s, v, a }) {\n  let r, g, b, i, f, p, q, t\n  s = s / 100\n  v = v / 100\n\n  h = h / 360\n  i = Math.floor(h * 6)\n  f = h * 6 - i\n  p = v * (1 - s)\n  q = v * (1 - f * s)\n  t = v * (1 - (1 - f) * s)\n\n  switch (i % 6) {\n    case 0:\n      r = v\n      g = t\n      b = p\n      break\n    case 1:\n      r = q\n      g = v\n      b = p\n      break\n    case 2:\n      r = p\n      g = v\n      b = t\n      break\n    case 3:\n      r = p\n      g = q\n      b = v\n      break\n    case 4:\n      r = t\n      g = p\n      b = v\n      break\n    case 5:\n      r = v\n      g = p\n      b = q\n      break\n  }\n\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255),\n    a\n  }\n}\n\nexport function rgbToHsv ({ r, g, b, a }) {\n  let\n    max = Math.max(r, g, b), min = Math.min(r, g, b),\n    d = max - min,\n    h,\n    s = (max === 0 ? 0 : d / max),\n    v = max / 255\n\n  switch (max) {\n    case min:\n      h = 0\n      break\n    case r:\n      h = (g - b) + d * (g < b ? 6 : 0)\n      h /= 6 * d\n      break\n    case g:\n      h = (b - r) + d * 2\n      h /= 6 * d\n      break\n    case b:\n      h = (r - g) + d * 4\n      h /= 6 * d\n      break\n  }\n\n  return {\n    h: Math.round(h * 360),\n    s: Math.round(s * 100),\n    v: Math.round(v * 100),\n    a\n  }\n}\n\nconst reRGBA = /^\\s*rgb(a)?\\s*\\((\\s*(\\d+)\\s*,\\s*?){2}(\\d+)\\s*,?\\s*([01]?\\.?\\d*?)?\\s*\\)\\s*$/\n\nexport function textToRgb (color) {\n  if (typeof color !== 'string') {\n    throw new TypeError('Expected a string')\n  }\n\n  const m = reRGBA.exec(color)\n  if (m) {\n    const rgb = {\n      r: Math.min(255, parseInt(m[2], 10)),\n      g: Math.min(255, parseInt(m[3], 10)),\n      b: Math.min(255, parseInt(m[4], 10))\n    }\n    if (m[1]) {\n      rgb.a = Math.min(1, parseFloat(m[5]))\n    }\n    return rgb\n  }\n  return hexToRgb(color)\n}\n\n/* works as darken if percent < 0 */\nexport function lighten (color, percent) {\n  if (typeof color !== 'string') {\n    throw new TypeError('Expected a string as color')\n  }\n  if (typeof percent !== 'number') {\n    throw new TypeError('Expected a numeric percent')\n  }\n\n  const rgb = textToRgb(color),\n    t = percent < 0 ? 0 : 255,\n    p = Math.abs(percent) / 100,\n    R = rgb.r,\n    G = rgb.g,\n    B = rgb.b\n\n  return '#' + (\n    0x1000000 + (Math.round((t - R) * p) + R) * 0x10000 +\n    (Math.round((t - G) * p) + G) * 0x100 +\n    (Math.round((t - B) * p) + B)\n  ).toString(16).slice(1)\n}\n\nexport function luminosity (color) {\n  if (typeof color !== 'string' && (!color || color.r === void 0)) {\n    throw new TypeError('Expected a string or a {r, g, b} object as color')\n  }\n\n  const\n    rgb = typeof color === 'string' ? textToRgb(color) : color,\n    r = rgb.r / 255,\n    g = rgb.g / 255,\n    b = rgb.b / 255,\n    R = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4),\n    G = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4),\n    B = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4)\n  return 0.2126 * R + 0.7152 * G + 0.0722 * B\n}\n\nexport function setBrand (color, value, element = document.body) {\n  if (typeof color !== 'string') {\n    throw new TypeError('Expected a string as color')\n  }\n  if (typeof value !== 'string') {\n    throw new TypeError('Expected a string as value')\n  }\n  if (!(element instanceof Element)) {\n    throw new TypeError('Expected a DOM element')\n  }\n\n  element.style.setProperty(`--q-color-${color}`, value)\n  switch (color) {\n    case 'negative':\n    case 'warning':\n      element.style.setProperty(`--q-color-${color}-l`, lighten(value, 46))\n      break\n    case 'light':\n      element.style.setProperty(`--q-color-${color}-d`, lighten(value, -10))\n  }\n}\n\nexport function getBrand (color, element = document.body) {\n  if (typeof color !== 'string') {\n    throw new TypeError('Expected a string as color')\n  }\n  if (!(element instanceof Element)) {\n    throw new TypeError('Expected a DOM element')\n  }\n\n  return getComputedStyle(element).getPropertyValue(`--q-color-${color}`).trim() || null\n}\n\nexport default {\n  rgbToHex,\n  hexToRgb,\n  hsvToRgb,\n  rgbToHsv,\n  textToRgb,\n  lighten,\n  luminosity,\n  setBrand,\n  getBrand\n}\n"]}]}