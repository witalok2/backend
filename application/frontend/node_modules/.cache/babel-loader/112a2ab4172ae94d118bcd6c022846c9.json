{"remainingRequest":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js!/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/mixins/mask.js","dependencies":[{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/mixins/mask.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport _toConsumableArray from \"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n// leave NAMED_MASKS at top of file (code referenced from docs)\nvar NAMED_MASKS = {\n  date: '####/##/##',\n  datetime: '####/##/## ##:##',\n  time: '##:##',\n  fulltime: '##:##:##',\n  phone: '(###) ### - ####',\n  card: '#### #### #### ####'\n};\nvar TOKENS = {\n  '#': {\n    pattern: '[\\\\d]',\n    negate: '[^\\\\d]'\n  },\n  S: {\n    pattern: '[a-zA-Z]',\n    negate: '[^a-zA-Z]'\n  },\n  N: {\n    pattern: '[0-9a-zA-Z]',\n    negate: '[^0-9a-zA-Z]'\n  },\n  A: {\n    pattern: '[a-zA-Z]',\n    negate: '[^a-zA-Z]',\n    transform: function transform(v) {\n      return v.toLocaleUpperCase();\n    }\n  },\n  a: {\n    pattern: '[a-zA-Z]',\n    negate: '[^a-zA-Z]',\n    transform: function transform(v) {\n      return v.toLocaleLowerCase();\n    }\n  },\n  X: {\n    pattern: '[0-9a-zA-Z]',\n    negate: '[^0-9a-zA-Z]',\n    transform: function transform(v) {\n      return v.toLocaleUpperCase();\n    }\n  },\n  x: {\n    pattern: '[0-9a-zA-Z]',\n    negate: '[^0-9a-zA-Z]',\n    transform: function transform(v) {\n      return v.toLocaleLowerCase();\n    }\n  }\n};\nvar KEYS = Object.keys(TOKENS);\nKEYS.forEach(function (key) {\n  TOKENS[key].regex = new RegExp(TOKENS[key].pattern);\n});\nvar tokenRegexMask = new RegExp('\\\\\\\\([^.*+?^${}()|([\\\\]])|([.*+?^${}()|[\\\\]])|([' + KEYS.join('') + '])|(.)', 'g'),\n    escRegex = /[.*+?^${}()|[\\]\\\\]/g;\nvar MARKER = String.fromCharCode(1);\nexport default {\n  props: {\n    mask: String,\n    reverseFillMask: Boolean,\n    fillMask: [Boolean, String],\n    unmaskedValue: Boolean\n  },\n  watch: {\n    type: function type() {\n      this.__updateMaskInternals();\n    },\n    mask: function mask(v) {\n      if (v !== void 0) {\n        this.__updateMaskValue(this.innerValue, true);\n      } else {\n        var val = this.__unmask(this.innerValue);\n\n        this.__updateMaskInternals();\n\n        this.value !== val && this.$emit('input', val);\n      }\n    },\n    fillMask: function fillMask() {\n      this.hasMask === true && this.__updateMaskValue(this.innerValue, true);\n    },\n    reverseFillMask: function reverseFillMask() {\n      this.hasMask === true && this.__updateMaskValue(this.innerValue, true);\n    },\n    unmaskedValue: function unmaskedValue() {\n      this.hasMask === true && this.__updateMaskValue(this.innerValue);\n    }\n  },\n  methods: {\n    __getInitialMaskedValue: function __getInitialMaskedValue() {\n      this.__updateMaskInternals();\n\n      if (this.hasMask === true) {\n        var masked = this.__mask(this.__unmask(this.value));\n\n        return this.fillMask !== false ? this.__fillWithMask(masked) : masked;\n      }\n\n      return this.value;\n    },\n    __getPaddedMaskMarked: function __getPaddedMaskMarked(size) {\n      if (size < this.maskMarked.length) {\n        return this.maskMarked.slice(-size);\n      }\n\n      var maskMarked = this.maskMarked,\n          padPos = maskMarked.indexOf(MARKER),\n          pad = '';\n\n      if (padPos > -1) {\n        for (var i = size - maskMarked.length; i > 0; i--) {\n          pad += MARKER;\n        }\n\n        maskMarked = maskMarked.slice(0, padPos) + pad + maskMarked.slice(padPos);\n      }\n\n      return maskMarked;\n    },\n    __updateMaskInternals: function __updateMaskInternals() {\n      var _this = this;\n\n      this.hasMask = this.mask !== void 0 && this.mask.length > 0 && ['text', 'search', 'url', 'tel', 'password'].includes(this.type);\n\n      if (this.hasMask === false) {\n        this.computedUnmask = void 0;\n        this.maskMarked = '';\n        this.maskReplaced = '';\n        return;\n      }\n\n      var computedMask = NAMED_MASKS[this.mask] === void 0 ? this.mask : NAMED_MASKS[this.mask],\n          fillChar = typeof this.fillMask === 'string' && this.fillMask.length > 0 ? this.fillMask.slice(0, 1) : '_',\n          fillCharEscaped = fillChar.replace(escRegex, '\\\\$&'),\n          unmask = [],\n          extract = [],\n          mask = [];\n      var firstMatch = this.reverseFillMask === true,\n          unmaskChar = '',\n          negateChar = '';\n      computedMask.replace(tokenRegexMask, function (_, char1, esc, token, char2) {\n        if (token !== void 0) {\n          var c = TOKENS[token];\n          mask.push(c);\n          negateChar = c.negate;\n\n          if (firstMatch === true) {\n            extract.push('(?:' + negateChar + '+?)?(' + c.pattern + '+)?(?:' + negateChar + '+?)?(' + c.pattern + '+)?');\n            firstMatch = false;\n          }\n\n          extract.push('(?:' + negateChar + '+?)?(' + c.pattern + ')?');\n        } else if (esc !== void 0) {\n          unmaskChar = '\\\\' + (esc === '\\\\' ? '' : esc);\n          mask.push(esc);\n          unmask.push('([^' + unmaskChar + ']+)?' + unmaskChar + '?');\n        } else {\n          var _c = char1 !== void 0 ? char1 : char2;\n\n          unmaskChar = _c === '\\\\' ? '\\\\\\\\\\\\\\\\' : _c.replace(escRegex, '\\\\\\\\$&');\n          mask.push(_c);\n          unmask.push('([^' + unmaskChar + ']+)?' + unmaskChar + '?');\n        }\n      });\n      var unmaskMatcher = new RegExp('^' + unmask.join('') + '(' + (unmaskChar === '' ? '.' : '[^' + unmaskChar + ']') + '+)?' + '$'),\n          extractLast = extract.length - 1,\n          extractMatcher = extract.map(function (re, index) {\n        if (index === 0 && _this.reverseFillMask === true) {\n          return new RegExp('^' + fillCharEscaped + '*' + re);\n        } else if (index === extractLast) {\n          return new RegExp('^' + re + '(' + (negateChar === '' ? '.' : negateChar) + '+)?' + (_this.reverseFillMask === true ? '$' : fillCharEscaped + '*'));\n        }\n\n        return new RegExp('^' + re);\n      });\n      this.computedMask = mask;\n\n      this.computedUnmask = function (val) {\n        var unmaskMatch = unmaskMatcher.exec(val);\n\n        if (unmaskMatch !== null) {\n          val = unmaskMatch.slice(1).join('');\n        }\n\n        var extractMatch = [],\n            extractMatcherLength = extractMatcher.length;\n\n        for (var i = 0, str = val; i < extractMatcherLength; i++) {\n          var m = extractMatcher[i].exec(str);\n\n          if (m === null) {\n            break;\n          }\n\n          str = str.slice(m.shift().length);\n          extractMatch.push.apply(extractMatch, _toConsumableArray(m));\n        }\n\n        if (extractMatch.length > 0) {\n          return extractMatch.join('');\n        }\n\n        return val;\n      };\n\n      this.maskMarked = mask.map(function (v) {\n        return typeof v === 'string' ? v : MARKER;\n      }).join('');\n      this.maskReplaced = this.maskMarked.split(MARKER).join(fillChar);\n    },\n    __updateMaskValue: function __updateMaskValue(rawVal, updateMaskInternals) {\n      var _this2 = this;\n\n      var inp = this.$refs.input,\n          oldCursor = this.reverseFillMask === true ? inp.value.length - inp.selectionEnd : inp.selectionEnd,\n          unmasked = this.__unmask(rawVal); // Update here so unmask uses the original fillChar\n\n\n      updateMaskInternals === true && this.__updateMaskInternals();\n\n      var preMasked = this.__mask(unmasked),\n          masked = this.fillMask !== false ? this.__fillWithMask(preMasked) : preMasked,\n          changed = this.innerValue !== masked; // We want to avoid \"flickering\" so we set value immediately\n\n\n      inp.value !== masked && (inp.value = masked);\n      changed === true && (this.innerValue = masked);\n      this.$nextTick(function () {\n        if (_this2.reverseFillMask === true) {\n          if (changed === true) {\n            var cursor = Math.max(0, masked.length - (masked === _this2.maskReplaced ? 0 : Math.min(preMasked.length, oldCursor + 1)));\n\n            _this2.__moveCursorRightReverse(inp, cursor, cursor);\n          } else {\n            var _cursor = masked.length - oldCursor;\n\n            inp.setSelectionRange(_cursor, _cursor);\n          }\n        } else if (changed === true) {\n          if (masked === _this2.maskReplaced) {\n            _this2.__moveCursorLeft(inp, 0, 0);\n          } else {\n            var _cursor2 = Math.max(0, _this2.maskMarked.indexOf(MARKER), Math.min(preMasked.length, oldCursor) - 1);\n\n            _this2.__moveCursorRight(inp, _cursor2, _cursor2);\n          }\n        } else {\n          _this2.__moveCursorLeft(inp, oldCursor, oldCursor);\n        }\n      });\n      var val = this.unmaskedValue === true ? this.__unmask(masked) : masked;\n      this.value !== val && this.__emitValue(val, true);\n    },\n    __moveCursorLeft: function __moveCursorLeft(inp, start, end, selection) {\n      var noMarkBefore = this.maskMarked.slice(start - 1).indexOf(MARKER) === -1;\n      var i = Math.max(0, start - 1);\n\n      for (; i >= 0; i--) {\n        if (this.maskMarked[i] === MARKER) {\n          start = i;\n          noMarkBefore === true && start++;\n          break;\n        }\n      }\n\n      if (i < 0 && this.maskMarked[start] !== void 0 && this.maskMarked[start] !== MARKER) {\n        return this.__moveCursorRight(inp, 0, 0);\n      }\n\n      start >= 0 && inp.setSelectionRange(start, selection === true ? end : start, 'backward');\n    },\n    __moveCursorRight: function __moveCursorRight(inp, start, end, selection) {\n      var limit = inp.value.length;\n      var i = Math.min(limit, end + 1);\n\n      for (; i <= limit; i++) {\n        if (this.maskMarked[i] === MARKER) {\n          end = i;\n          break;\n        } else if (this.maskMarked[i - 1] === MARKER) {\n          end = i;\n        }\n      }\n\n      if (i > limit && this.maskMarked[end - 1] !== void 0 && this.maskMarked[end - 1] !== MARKER) {\n        return this.__moveCursorLeft(inp, limit, limit);\n      }\n\n      inp.setSelectionRange(selection ? start : end, end, 'forward');\n    },\n    __moveCursorLeftReverse: function __moveCursorLeftReverse(inp, start, end, selection) {\n      var maskMarked = this.__getPaddedMaskMarked(inp.value.length);\n\n      var i = Math.max(0, start - 1);\n\n      for (; i >= 0; i--) {\n        if (maskMarked[i - 1] === MARKER) {\n          start = i;\n          break;\n        } else if (maskMarked[i] === MARKER) {\n          start = i;\n\n          if (i === 0) {\n            break;\n          }\n        }\n      }\n\n      if (i < 0 && maskMarked[start] !== void 0 && maskMarked[start] !== MARKER) {\n        return this.__moveCursorRightReverse(inp, 0, 0);\n      }\n\n      start >= 0 && inp.setSelectionRange(start, selection === true ? end : start, 'backward');\n    },\n    __moveCursorRightReverse: function __moveCursorRightReverse(inp, start, end, selection) {\n      var limit = inp.value.length,\n          maskMarked = this.__getPaddedMaskMarked(limit),\n          noMarkBefore = maskMarked.slice(0, end + 1).indexOf(MARKER) === -1;\n\n      var i = Math.min(limit, end + 1);\n\n      for (; i <= limit; i++) {\n        if (maskMarked[i - 1] === MARKER) {\n          end = i;\n          end > 0 && noMarkBefore === true && end--;\n          break;\n        }\n      }\n\n      if (i > limit && maskMarked[end - 1] !== void 0 && maskMarked[end - 1] !== MARKER) {\n        return this.__moveCursorLeftReverse(inp, limit, limit);\n      }\n\n      inp.setSelectionRange(selection === true ? start : end, end, 'forward');\n    },\n    __onMaskedKeydown: function __onMaskedKeydown(e) {\n      var inp = this.$refs.input,\n          start = inp.selectionStart,\n          end = inp.selectionEnd;\n\n      if (e.keyCode === 37 || e.keyCode === 39) {\n        // Left / Right\n        var fn = this['__moveCursor' + (e.keyCode === 39 ? 'Right' : 'Left') + (this.reverseFillMask === true ? 'Reverse' : '')];\n        e.preventDefault();\n        fn(inp, start, end, e.shiftKey);\n      } else if (e.keyCode === 8 && // Backspace\n      this.reverseFillMask !== true && start === end) {\n        this.__moveCursorLeft(inp, start, end, true);\n      } else if (e.keyCode === 46 && // Delete\n      this.reverseFillMask === true && start === end) {\n        this.__moveCursorRightReverse(inp, start, end, true);\n      }\n\n      this.$emit('keydown', e);\n    },\n    __mask: function __mask(val) {\n      if (val === void 0 || val === null || val === '') {\n        return '';\n      }\n\n      if (this.reverseFillMask === true) {\n        return this.__maskReverse(val);\n      }\n\n      var mask = this.computedMask;\n      var valIndex = 0,\n          output = '';\n\n      for (var maskIndex = 0; maskIndex < mask.length; maskIndex++) {\n        var valChar = val[valIndex],\n            maskDef = mask[maskIndex];\n\n        if (typeof maskDef === 'string') {\n          output += maskDef;\n          valChar === maskDef && valIndex++;\n        } else if (valChar !== void 0 && maskDef.regex.test(valChar)) {\n          output += maskDef.transform !== void 0 ? maskDef.transform(valChar) : valChar;\n          valIndex++;\n        } else {\n          return output;\n        }\n      }\n\n      return output;\n    },\n    __maskReverse: function __maskReverse(val) {\n      var mask = this.computedMask,\n          firstTokenIndex = this.maskMarked.indexOf(MARKER);\n      var valIndex = val.length - 1,\n          output = '';\n\n      for (var maskIndex = mask.length - 1; maskIndex >= 0; maskIndex--) {\n        var maskDef = mask[maskIndex];\n        var valChar = val[valIndex];\n\n        if (typeof maskDef === 'string') {\n          output = maskDef + output;\n          valChar === maskDef && valIndex--;\n        } else if (valChar !== void 0 && maskDef.regex.test(valChar)) {\n          do {\n            output = (maskDef.transform !== void 0 ? maskDef.transform(valChar) : valChar) + output;\n            valIndex--;\n            valChar = val[valIndex]; // eslint-disable-next-line no-unmodified-loop-condition\n          } while (firstTokenIndex === maskIndex && valChar !== void 0 && maskDef.regex.test(valChar));\n        } else {\n          return output;\n        }\n      }\n\n      return output;\n    },\n    __unmask: function __unmask(val) {\n      return typeof val !== 'string' || this.computedUnmask === void 0 ? typeof val === 'number' ? this.computedUnmask('' + val) : val : this.computedUnmask(val);\n    },\n    __fillWithMask: function __fillWithMask(val) {\n      if (this.maskReplaced.length - val.length <= 0) {\n        return val;\n      }\n\n      return this.reverseFillMask === true && val.length > 0 ? this.maskReplaced.slice(0, -val.length) + val : val + this.maskReplaced.slice(val.length);\n    }\n  }\n};",{"version":3,"sources":["/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/mixins/mask.js"],"names":["NAMED_MASKS","date","datetime","time","fulltime","phone","card","TOKENS","pattern","negate","S","N","A","transform","v","toLocaleUpperCase","a","toLocaleLowerCase","X","x","KEYS","Object","keys","forEach","key","regex","RegExp","tokenRegexMask","join","escRegex","MARKER","String","fromCharCode","props","mask","reverseFillMask","Boolean","fillMask","unmaskedValue","watch","type","__updateMaskInternals","__updateMaskValue","innerValue","val","__unmask","value","$emit","hasMask","methods","__getInitialMaskedValue","masked","__mask","__fillWithMask","__getPaddedMaskMarked","size","maskMarked","length","slice","padPos","indexOf","pad","i","includes","computedUnmask","maskReplaced","computedMask","fillChar","fillCharEscaped","replace","unmask","extract","firstMatch","unmaskChar","negateChar","_","char1","esc","token","char2","c","push","unmaskMatcher","extractLast","extractMatcher","map","re","index","unmaskMatch","exec","extractMatch","extractMatcherLength","str","m","shift","split","rawVal","updateMaskInternals","inp","$refs","input","oldCursor","selectionEnd","unmasked","preMasked","changed","$nextTick","cursor","Math","max","min","__moveCursorRightReverse","setSelectionRange","__moveCursorLeft","__moveCursorRight","__emitValue","start","end","selection","noMarkBefore","limit","__moveCursorLeftReverse","__onMaskedKeydown","e","selectionStart","keyCode","fn","preventDefault","shiftKey","__maskReverse","valIndex","output","maskIndex","valChar","maskDef","test","firstTokenIndex"],"mappings":"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","sourcesContent":["// leave NAMED_MASKS at top of file (code referenced from docs)\nconst NAMED_MASKS = {\n  date: '####/##/##',\n  datetime: '####/##/## ##:##',\n  time: '##:##',\n  fulltime: '##:##:##',\n  phone: '(###) ### - ####',\n  card: '#### #### #### ####'\n}\n\nconst TOKENS = {\n  '#': { pattern: '[\\\\d]', negate: '[^\\\\d]' },\n\n  S: { pattern: '[a-zA-Z]', negate: '[^a-zA-Z]' },\n  N: { pattern: '[0-9a-zA-Z]', negate: '[^0-9a-zA-Z]' },\n\n  A: { pattern: '[a-zA-Z]', negate: '[^a-zA-Z]', transform: v => v.toLocaleUpperCase() },\n  a: { pattern: '[a-zA-Z]', negate: '[^a-zA-Z]', transform: v => v.toLocaleLowerCase() },\n\n  X: { pattern: '[0-9a-zA-Z]', negate: '[^0-9a-zA-Z]', transform: v => v.toLocaleUpperCase() },\n  x: { pattern: '[0-9a-zA-Z]', negate: '[^0-9a-zA-Z]', transform: v => v.toLocaleLowerCase() }\n}\n\nconst KEYS = Object.keys(TOKENS)\nKEYS.forEach(key => {\n  TOKENS[key].regex = new RegExp(TOKENS[key].pattern)\n})\n\nconst\n  tokenRegexMask = new RegExp('\\\\\\\\([^.*+?^${}()|([\\\\]])|([.*+?^${}()|[\\\\]])|([' + KEYS.join('') + '])|(.)', 'g'),\n  escRegex = /[.*+?^${}()|[\\]\\\\]/g\n\nconst MARKER = String.fromCharCode(1)\n\nexport default {\n  props: {\n    mask: String,\n    reverseFillMask: Boolean,\n    fillMask: [Boolean, String],\n    unmaskedValue: Boolean\n  },\n\n  watch: {\n    type () {\n      this.__updateMaskInternals()\n    },\n\n    mask (v) {\n      if (v !== void 0) {\n        this.__updateMaskValue(this.innerValue, true)\n      }\n      else {\n        const val = this.__unmask(this.innerValue)\n        this.__updateMaskInternals()\n        this.value !== val && this.$emit('input', val)\n      }\n    },\n\n    fillMask () {\n      this.hasMask === true && this.__updateMaskValue(this.innerValue, true)\n    },\n\n    reverseFillMask () {\n      this.hasMask === true && this.__updateMaskValue(this.innerValue, true)\n    },\n\n    unmaskedValue () {\n      this.hasMask === true && this.__updateMaskValue(this.innerValue)\n    }\n  },\n\n  methods: {\n    __getInitialMaskedValue () {\n      this.__updateMaskInternals()\n\n      if (this.hasMask === true) {\n        const masked = this.__mask(this.__unmask(this.value))\n\n        return this.fillMask !== false\n          ? this.__fillWithMask(masked)\n          : masked\n      }\n\n      return this.value\n    },\n\n    __getPaddedMaskMarked (size) {\n      if (size < this.maskMarked.length) {\n        return this.maskMarked.slice(-size)\n      }\n\n      let\n        maskMarked = this.maskMarked,\n        padPos = maskMarked.indexOf(MARKER),\n        pad = ''\n\n      if (padPos > -1) {\n        for (let i = size - maskMarked.length; i > 0; i--) {\n          pad += MARKER\n        }\n\n        maskMarked = maskMarked.slice(0, padPos) + pad + maskMarked.slice(padPos)\n      }\n\n      return maskMarked\n    },\n\n    __updateMaskInternals () {\n      this.hasMask = this.mask !== void 0 &&\n        this.mask.length > 0 &&\n        ['text', 'search', 'url', 'tel', 'password'].includes(this.type)\n\n      if (this.hasMask === false) {\n        this.computedUnmask = void 0\n        this.maskMarked = ''\n        this.maskReplaced = ''\n        return\n      }\n\n      const\n        computedMask = NAMED_MASKS[this.mask] === void 0\n          ? this.mask\n          : NAMED_MASKS[this.mask],\n        fillChar = typeof this.fillMask === 'string' && this.fillMask.length > 0\n          ? this.fillMask.slice(0, 1)\n          : '_',\n        fillCharEscaped = fillChar.replace(escRegex, '\\\\$&'),\n        unmask = [],\n        extract = [],\n        mask = []\n\n      let\n        firstMatch = this.reverseFillMask === true,\n        unmaskChar = '',\n        negateChar = ''\n\n      computedMask.replace(tokenRegexMask, (_, char1, esc, token, char2) => {\n        if (token !== void 0) {\n          const c = TOKENS[token]\n          mask.push(c)\n          negateChar = c.negate\n          if (firstMatch === true) {\n            extract.push('(?:' + negateChar + '+?)?(' + c.pattern + '+)?(?:' + negateChar + '+?)?(' + c.pattern + '+)?')\n            firstMatch = false\n          }\n          extract.push('(?:' + negateChar + '+?)?(' + c.pattern + ')?')\n        }\n        else if (esc !== void 0) {\n          unmaskChar = '\\\\' + (esc === '\\\\' ? '' : esc)\n          mask.push(esc)\n          unmask.push('([^' + unmaskChar + ']+)?' + unmaskChar + '?')\n        }\n        else {\n          const c = char1 !== void 0 ? char1 : char2\n          unmaskChar = c === '\\\\' ? '\\\\\\\\\\\\\\\\' : c.replace(escRegex, '\\\\\\\\$&')\n          mask.push(c)\n          unmask.push('([^' + unmaskChar + ']+)?' + unmaskChar + '?')\n        }\n      })\n\n      const\n        unmaskMatcher = new RegExp(\n          '^' +\n          unmask.join('') +\n          '(' + (unmaskChar === '' ? '.' : '[^' + unmaskChar + ']') + '+)?' +\n          '$'\n        ),\n        extractLast = extract.length - 1,\n        extractMatcher = extract.map((re, index) => {\n          if (index === 0 && this.reverseFillMask === true) {\n            return new RegExp('^' + fillCharEscaped + '*' + re)\n          }\n          else if (index === extractLast) {\n            return new RegExp(\n              '^' + re +\n              '(' + (negateChar === '' ? '.' : negateChar) + '+)?' +\n              (this.reverseFillMask === true ? '$' : fillCharEscaped + '*')\n            )\n          }\n\n          return new RegExp('^' + re)\n        })\n\n      this.computedMask = mask\n      this.computedUnmask = val => {\n        const unmaskMatch = unmaskMatcher.exec(val)\n        if (unmaskMatch !== null) {\n          val = unmaskMatch.slice(1).join('')\n        }\n\n        const\n          extractMatch = [],\n          extractMatcherLength = extractMatcher.length\n\n        for (let i = 0, str = val; i < extractMatcherLength; i++) {\n          const m = extractMatcher[i].exec(str)\n\n          if (m === null) {\n            break\n          }\n\n          str = str.slice(m.shift().length)\n          extractMatch.push(...m)\n        }\n        if (extractMatch.length > 0) {\n          return extractMatch.join('')\n        }\n\n        return val\n      }\n      this.maskMarked = mask.map(v => typeof v === 'string' ? v : MARKER).join('')\n      this.maskReplaced = this.maskMarked.split(MARKER).join(fillChar)\n    },\n\n    __updateMaskValue (rawVal, updateMaskInternals) {\n      const\n        inp = this.$refs.input,\n        oldCursor = this.reverseFillMask === true\n          ? inp.value.length - inp.selectionEnd\n          : inp.selectionEnd,\n        unmasked = this.__unmask(rawVal)\n\n      // Update here so unmask uses the original fillChar\n      updateMaskInternals === true && this.__updateMaskInternals()\n\n      const\n        preMasked = this.__mask(unmasked),\n        masked = this.fillMask !== false\n          ? this.__fillWithMask(preMasked)\n          : preMasked,\n        changed = this.innerValue !== masked\n\n      // We want to avoid \"flickering\" so we set value immediately\n      inp.value !== masked && (inp.value = masked)\n\n      changed === true && (this.innerValue = masked)\n\n      this.$nextTick(() => {\n        if (this.reverseFillMask === true) {\n          if (changed === true) {\n            const cursor = Math.max(0, masked.length - (masked === this.maskReplaced ? 0 : Math.min(preMasked.length, oldCursor + 1)))\n            this.__moveCursorRightReverse(inp, cursor, cursor)\n          }\n          else {\n            const cursor = masked.length - oldCursor\n            inp.setSelectionRange(cursor, cursor)\n          }\n        }\n        else if (changed === true) {\n          if (masked === this.maskReplaced) {\n            this.__moveCursorLeft(inp, 0, 0)\n          }\n          else {\n            const cursor = Math.max(0, this.maskMarked.indexOf(MARKER), Math.min(preMasked.length, oldCursor) - 1)\n            this.__moveCursorRight(inp, cursor, cursor)\n          }\n        }\n        else {\n          this.__moveCursorLeft(inp, oldCursor, oldCursor)\n        }\n      })\n\n      const val = this.unmaskedValue === true\n        ? this.__unmask(masked)\n        : masked\n\n      this.value !== val && this.__emitValue(val, true)\n    },\n\n    __moveCursorLeft (inp, start, end, selection) {\n      const noMarkBefore = this.maskMarked.slice(start - 1).indexOf(MARKER) === -1\n      let i = Math.max(0, start - 1)\n\n      for (; i >= 0; i--) {\n        if (this.maskMarked[i] === MARKER) {\n          start = i\n          noMarkBefore === true && start++\n          break\n        }\n      }\n\n      if (\n        i < 0 &&\n        this.maskMarked[start] !== void 0 &&\n        this.maskMarked[start] !== MARKER\n      ) {\n        return this.__moveCursorRight(inp, 0, 0)\n      }\n\n      start >= 0 && inp.setSelectionRange(\n        start,\n        selection === true ? end : start, 'backward'\n      )\n    },\n\n    __moveCursorRight (inp, start, end, selection) {\n      const limit = inp.value.length\n      let i = Math.min(limit, end + 1)\n\n      for (; i <= limit; i++) {\n        if (this.maskMarked[i] === MARKER) {\n          end = i\n          break\n        }\n        else if (this.maskMarked[i - 1] === MARKER) {\n          end = i\n        }\n      }\n\n      if (\n        i > limit &&\n        this.maskMarked[end - 1] !== void 0 &&\n        this.maskMarked[end - 1] !== MARKER\n      ) {\n        return this.__moveCursorLeft(inp, limit, limit)\n      }\n\n      inp.setSelectionRange(selection ? start : end, end, 'forward')\n    },\n\n    __moveCursorLeftReverse (inp, start, end, selection) {\n      const\n        maskMarked = this.__getPaddedMaskMarked(inp.value.length)\n      let i = Math.max(0, start - 1)\n\n      for (; i >= 0; i--) {\n        if (maskMarked[i - 1] === MARKER) {\n          start = i\n          break\n        }\n        else if (maskMarked[i] === MARKER) {\n          start = i\n          if (i === 0) {\n            break\n          }\n        }\n      }\n\n      if (\n        i < 0 &&\n        maskMarked[start] !== void 0 &&\n        maskMarked[start] !== MARKER\n      ) {\n        return this.__moveCursorRightReverse(inp, 0, 0)\n      }\n\n      start >= 0 && inp.setSelectionRange(\n        start,\n        selection === true ? end : start, 'backward'\n      )\n    },\n\n    __moveCursorRightReverse (inp, start, end, selection) {\n      const\n        limit = inp.value.length,\n        maskMarked = this.__getPaddedMaskMarked(limit),\n        noMarkBefore = maskMarked.slice(0, end + 1).indexOf(MARKER) === -1\n      let i = Math.min(limit, end + 1)\n\n      for (; i <= limit; i++) {\n        if (maskMarked[i - 1] === MARKER) {\n          end = i\n          end > 0 && noMarkBefore === true && end--\n          break\n        }\n      }\n\n      if (\n        i > limit &&\n        maskMarked[end - 1] !== void 0 &&\n        maskMarked[end - 1] !== MARKER\n      ) {\n        return this.__moveCursorLeftReverse(inp, limit, limit)\n      }\n\n      inp.setSelectionRange(selection === true ? start : end, end, 'forward')\n    },\n\n    __onMaskedKeydown (e) {\n      const\n        inp = this.$refs.input,\n        start = inp.selectionStart,\n        end = inp.selectionEnd\n\n      if (e.keyCode === 37 || e.keyCode === 39) { // Left / Right\n        const fn = this['__moveCursor' + (e.keyCode === 39 ? 'Right' : 'Left') + (this.reverseFillMask === true ? 'Reverse' : '')]\n\n        e.preventDefault()\n        fn(inp, start, end, e.shiftKey)\n      }\n      else if (\n        e.keyCode === 8 && // Backspace\n        this.reverseFillMask !== true &&\n        start === end\n      ) {\n        this.__moveCursorLeft(inp, start, end, true)\n      }\n      else if (\n        e.keyCode === 46 && // Delete\n        this.reverseFillMask === true &&\n        start === end\n      ) {\n        this.__moveCursorRightReverse(inp, start, end, true)\n      }\n\n      this.$emit('keydown', e)\n    },\n\n    __mask (val) {\n      if (val === void 0 || val === null || val === '') { return '' }\n\n      if (this.reverseFillMask === true) {\n        return this.__maskReverse(val)\n      }\n\n      const mask = this.computedMask\n\n      let valIndex = 0, output = ''\n\n      for (let maskIndex = 0; maskIndex < mask.length; maskIndex++) {\n        const\n          valChar = val[valIndex],\n          maskDef = mask[maskIndex]\n\n        if (typeof maskDef === 'string') {\n          output += maskDef\n          valChar === maskDef && valIndex++\n        }\n        else if (valChar !== void 0 && maskDef.regex.test(valChar)) {\n          output += maskDef.transform !== void 0\n            ? maskDef.transform(valChar)\n            : valChar\n          valIndex++\n        }\n        else {\n          return output\n        }\n      }\n\n      return output\n    },\n\n    __maskReverse (val) {\n      const\n        mask = this.computedMask,\n        firstTokenIndex = this.maskMarked.indexOf(MARKER)\n\n      let valIndex = val.length - 1, output = ''\n\n      for (let maskIndex = mask.length - 1; maskIndex >= 0; maskIndex--) {\n        const maskDef = mask[maskIndex]\n\n        let valChar = val[valIndex]\n\n        if (typeof maskDef === 'string') {\n          output = maskDef + output\n          valChar === maskDef && valIndex--\n        }\n        else if (valChar !== void 0 && maskDef.regex.test(valChar)) {\n          do {\n            output = (maskDef.transform !== void 0 ? maskDef.transform(valChar) : valChar) + output\n            valIndex--\n            valChar = val[valIndex]\n          // eslint-disable-next-line no-unmodified-loop-condition\n          } while (firstTokenIndex === maskIndex && valChar !== void 0 && maskDef.regex.test(valChar))\n        }\n        else {\n          return output\n        }\n      }\n\n      return output\n    },\n\n    __unmask (val) {\n      return typeof val !== 'string' || this.computedUnmask === void 0\n        ? (typeof val === 'number' ? this.computedUnmask('' + val) : val)\n        : this.computedUnmask(val)\n    },\n\n    __fillWithMask (val) {\n      if (this.maskReplaced.length - val.length <= 0) {\n        return val\n      }\n\n      return this.reverseFillMask === true && val.length > 0\n        ? this.maskReplaced.slice(0, -val.length) + val\n        : val + this.maskReplaced.slice(val.length)\n    }\n  }\n}\n"]}]}