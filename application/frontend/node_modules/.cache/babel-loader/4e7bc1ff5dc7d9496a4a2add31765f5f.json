{"remainingRequest":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js!/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/mixins/validate.js","dependencies":[{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/mixins/validate.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport { testPattern } from \"../utils/patterns.js\";\nexport default {\n  props: {\n    value: {},\n    error: {\n      type: Boolean,\n      default: null\n    },\n    errorMessage: String,\n    noErrorIcon: Boolean,\n    rules: Array,\n    lazyRules: Boolean\n  },\n  data: function data() {\n    return {\n      isDirty: false,\n      innerError: false,\n      innerErrorMessage: void 0\n    };\n  },\n  watch: {\n    value: function value(v) {\n      if (this.rules === void 0) {\n        return;\n      }\n\n      if (this.lazyRules === true && this.isDirty === false) {\n        return;\n      }\n\n      this.validate(v);\n    },\n    focused: function focused(_focused) {\n      _focused === false && this.__triggerValidation();\n    }\n  },\n  computed: {\n    hasError: function hasError() {\n      return this.error === true || this.innerError === true;\n    },\n    computedErrorMessage: function computedErrorMessage() {\n      return typeof this.errorMessage === 'string' && this.errorMessage.length > 0 ? this.errorMessage : this.innerErrorMessage;\n    }\n  },\n  mounted: function mounted() {\n    this.validateIndex = 0;\n    this.focused === void 0 && this.$el.addEventListener('focusout', this.__triggerValidation);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.focused === void 0 && this.$el.removeEventListener('focusout', this.__triggerValidation);\n  },\n  methods: {\n    resetValidation: function resetValidation() {\n      this.validateIndex++;\n      this.innerLoading = false;\n      this.isDirty = false;\n      this.innerError = false;\n      this.innerErrorMessage = void 0;\n    },\n\n    /*\n     * Return value\n     *   - true (validation succeeded)\n     *   - false (validation failed)\n     *   - Promise (pending async validation)\n     */\n    validate: function validate() {\n      var _this = this;\n\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.value;\n\n      if (!this.rules || this.rules.length === 0) {\n        return true;\n      }\n\n      this.validateIndex++;\n\n      if (this.innerLoading !== true && this.lazyRules !== true) {\n        this.isDirty = true;\n      }\n\n      var update = function update(err, msg) {\n        if (_this.innerError !== err) {\n          _this.innerError = err;\n        }\n\n        var m = msg || void 0;\n\n        if (_this.innerErrorMessage !== m) {\n          _this.innerErrorMessage = m;\n        }\n\n        if (_this.innerLoading !== false) {\n          _this.innerLoading = false;\n        }\n      };\n\n      var promises = [];\n\n      for (var i = 0; i < this.rules.length; i++) {\n        var rule = this.rules[i];\n        var res = void 0;\n\n        if (typeof rule === 'function') {\n          res = rule(val);\n        } else if (typeof rule === 'string' && testPattern[rule] !== void 0) {\n          res = testPattern[rule](val);\n        }\n\n        if (res === false || typeof res === 'string') {\n          update(true, res);\n          return false;\n        } else if (res !== true && res !== void 0) {\n          promises.push(res);\n        }\n      }\n\n      if (promises.length === 0) {\n        update(false);\n        return true;\n      }\n\n      if (this.innerLoading !== true) {\n        this.innerLoading = true;\n      }\n\n      var index = this.validateIndex;\n      return Promise.all(promises).then(function (res) {\n        if (index === _this.validateIndex) {\n          if (res === void 0 || Array.isArray(res) === false || res.length === 0) {\n            update(false);\n            return true;\n          } else {\n            var msg = res.find(function (r) {\n              return r === false || typeof r === 'string';\n            });\n            update(msg !== void 0, msg);\n            return msg === void 0;\n          }\n        }\n\n        return true;\n      }, function (e) {\n        if (index === _this.validateIndex) {\n          console.error(e);\n          update(true);\n          return false;\n        }\n      });\n    },\n    __triggerValidation: function __triggerValidation() {\n      if (this.isDirty === false && this.rules !== void 0) {\n        this.isDirty = true;\n        this.validate(this.value);\n      }\n    }\n  }\n};",{"version":3,"sources":["/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/mixins/validate.js"],"names":["testPattern","props","value","error","type","Boolean","default","errorMessage","String","noErrorIcon","rules","Array","lazyRules","data","isDirty","innerError","innerErrorMessage","watch","v","validate","focused","__triggerValidation","computed","hasError","computedErrorMessage","length","mounted","validateIndex","$el","addEventListener","beforeDestroy","removeEventListener","methods","resetValidation","innerLoading","val","update","err","msg","m","promises","i","rule","res","push","index","Promise","all","then","isArray","find","r","e","console"],"mappings":"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","sourcesContent":["import { testPattern } from '../utils/patterns.js'\n\nexport default {\n  props: {\n    value: {},\n\n    error: {\n      type: Boolean,\n      default: null\n    },\n    errorMessage: String,\n    noErrorIcon: Boolean,\n\n    rules: Array,\n    lazyRules: Boolean\n  },\n\n  data () {\n    return {\n      isDirty: false,\n      innerError: false,\n      innerErrorMessage: void 0\n    }\n  },\n\n  watch: {\n    value (v) {\n      if (this.rules === void 0) {\n        return\n      }\n      if (this.lazyRules === true && this.isDirty === false) {\n        return\n      }\n\n      this.validate(v)\n    },\n\n    focused (focused) {\n      focused === false && this.__triggerValidation()\n    }\n  },\n\n  computed: {\n    hasError () {\n      return this.error === true || this.innerError === true\n    },\n\n    computedErrorMessage () {\n      return typeof this.errorMessage === 'string' && this.errorMessage.length > 0\n        ? this.errorMessage\n        : this.innerErrorMessage\n    }\n  },\n\n  mounted () {\n    this.validateIndex = 0\n    this.focused === void 0 && this.$el.addEventListener('focusout', this.__triggerValidation)\n  },\n\n  beforeDestroy () {\n    this.focused === void 0 && this.$el.removeEventListener('focusout', this.__triggerValidation)\n  },\n\n  methods: {\n    resetValidation () {\n      this.validateIndex++\n      this.innerLoading = false\n      this.isDirty = false\n      this.innerError = false\n      this.innerErrorMessage = void 0\n    },\n\n    /*\n     * Return value\n     *   - true (validation succeeded)\n     *   - false (validation failed)\n     *   - Promise (pending async validation)\n     */\n    validate (val = this.value) {\n      if (!this.rules || this.rules.length === 0) {\n        return true\n      }\n\n      this.validateIndex++\n\n      if (this.innerLoading !== true && this.lazyRules !== true) {\n        this.isDirty = true\n      }\n\n      const update = (err, msg) => {\n        if (this.innerError !== err) {\n          this.innerError = err\n        }\n\n        const m = msg || void 0\n        if (this.innerErrorMessage !== m) {\n          this.innerErrorMessage = m\n        }\n\n        if (this.innerLoading !== false) {\n          this.innerLoading = false\n        }\n      }\n\n      const promises = []\n\n      for (let i = 0; i < this.rules.length; i++) {\n        const rule = this.rules[i]\n        let res\n\n        if (typeof rule === 'function') {\n          res = rule(val)\n        }\n        else if (typeof rule === 'string' && testPattern[rule] !== void 0) {\n          res = testPattern[rule](val)\n        }\n\n        if (res === false || typeof res === 'string') {\n          update(true, res)\n          return false\n        }\n        else if (res !== true && res !== void 0) {\n          promises.push(res)\n        }\n      }\n\n      if (promises.length === 0) {\n        update(false)\n        return true\n      }\n\n      if (this.innerLoading !== true) {\n        this.innerLoading = true\n      }\n\n      const index = this.validateIndex\n\n      return Promise.all(promises).then(\n        res => {\n          if (index === this.validateIndex) {\n            if (res === void 0 || Array.isArray(res) === false || res.length === 0) {\n              update(false)\n              return true\n            }\n            else {\n              const msg = res.find(r => r === false || typeof r === 'string')\n              update(msg !== void 0, msg)\n              return msg === void 0\n            }\n          }\n          return true\n        },\n        (e) => {\n          if (index === this.validateIndex) {\n            console.error(e)\n            update(true)\n            return false\n          }\n        }\n      )\n    },\n\n    __triggerValidation () {\n      if (this.isDirty === false && this.rules !== void 0) {\n        this.isDirty = true\n        this.validate(this.value)\n      }\n    }\n  }\n}\n"]}]}