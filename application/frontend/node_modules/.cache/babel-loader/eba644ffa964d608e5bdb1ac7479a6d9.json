{"remainingRequest":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js!/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/components/input/QInput.js","dependencies":[{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/components/input/QInput.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.string.code-point-at\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Vue from 'vue';\nimport QField from \"../field/QField.js\";\nimport MaskMixin from \"../../mixins/mask.js\";\nimport debounce from \"../../utils/debounce.js\";\nimport { stop } from \"../../utils/event.js\";\nexport default Vue.extend({\n  name: 'QInput',\n  mixins: [QField, MaskMixin],\n  props: {\n    value: {\n      required: false\n    },\n    type: {\n      type: String,\n      default: 'text'\n    },\n    debounce: [String, Number],\n    maxlength: [Number, String],\n    autogrow: Boolean,\n    // makes a textarea\n    inputClass: [Array, String, Object],\n    inputStyle: [Array, String, Object]\n  },\n  watch: {\n    value: function value(v) {\n      if (this.hasMask === true) {\n        if (this.stopValueWatcher === true) {\n          this.stopValueWatcher = false;\n          return;\n        }\n\n        this.__updateMaskValue(v);\n      } else if (this.innerValue !== v) {\n        this.innerValue = v;\n\n        if (this.type === 'number' && this.hasOwnProperty('tempValue') === true) {\n          if (this.typedNumber === true) {\n            this.typedNumber = false;\n          } else {\n            delete this.tempValue;\n          }\n        }\n      } // textarea only\n\n\n      this.autogrow === true && this.$nextTick(this.__adjustHeightDebounce);\n    },\n    autogrow: function autogrow(_autogrow) {\n      // textarea only\n      if (_autogrow === true) {\n        this.$nextTick(this.__adjustHeightDebounce);\n      } // if it has a number of rows set respect it\n      else if (this.$attrs.rows > 0 && this.$refs.input !== void 0) {\n          var inp = this.$refs.input;\n          inp.style.height = 'auto';\n        }\n    },\n    dense: function dense() {\n      this.autogrow === true && this.$nextTick(this.__adjustHeight);\n    }\n  },\n  data: function data() {\n    return {\n      innerValue: this.__getInitialMaskedValue()\n    };\n  },\n  computed: {\n    isTextarea: function isTextarea() {\n      return this.type === 'textarea' || this.autogrow === true;\n    },\n    fieldClass: function fieldClass() {\n      return \"q-\".concat(this.isTextarea === true ? 'textarea' : 'input') + (this.autogrow === true ? ' q-textarea--autogrow' : '');\n    }\n  },\n  methods: {\n    focus: function focus() {\n      var el = document.activeElement;\n\n      if (this.$refs.input !== void 0 && this.$refs.input !== el && ( // IE can have null document.activeElement\n      el === null || el.id !== this.targetUid)) {\n        this.$refs.input.focus();\n      }\n    },\n    select: function select() {\n      this.$refs.input !== void 0 && this.$refs.input.select();\n    },\n    __onInput: function __onInput(e) {\n      if (e && e.target && e.target.composing === true) {\n        return;\n      }\n\n      if (this.type === 'file') {\n        this.$emit('input', e.target.files);\n        return;\n      }\n\n      var val = e.target.value;\n\n      if (this.hasMask === true) {\n        this.__updateMaskValue(val);\n      } else {\n        this.__emitValue(val);\n      } // we need to trigger it immediately too,\n      // to avoid \"flickering\"\n\n\n      this.autogrow === true && this.__adjustHeight();\n    },\n    __emitValue: function __emitValue(val, stopWatcher) {\n      var _this = this;\n\n      this.emitValueFn = function () {\n        if (_this.type !== 'number' && _this.hasOwnProperty('tempValue') === true) {\n          delete _this.tempValue;\n        }\n\n        if (_this.value !== val) {\n          stopWatcher === true && (_this.stopValueWatcher = true);\n\n          _this.$emit('input', val);\n        }\n\n        _this.emitValueFn = void 0;\n      };\n\n      if (this.type === 'number') {\n        this.typedNumber = true;\n        this.tempValue = val;\n      }\n\n      if (this.debounce !== void 0) {\n        clearTimeout(this.emitTimer);\n        this.tempValue = val;\n        this.emitTimer = setTimeout(this.emitValueFn, this.debounce);\n      } else {\n        this.emitValueFn();\n      }\n    },\n    // textarea only\n    __adjustHeight: function __adjustHeight() {\n      var inp = this.$refs.input;\n\n      if (inp !== void 0) {\n        inp.style.height = '1px';\n        inp.style.height = inp.scrollHeight + 'px';\n      }\n    },\n    __onCompositionStart: function __onCompositionStart(e) {\n      e.target.composing = true;\n    },\n    __onCompositionUpdate: function __onCompositionUpdate(e) {\n      if (typeof e.data === 'string' && e.data.codePointAt(0) < 256) {\n        e.target.composing = false;\n      }\n    },\n    __onCompositionEnd: function __onCompositionEnd(e) {\n      if (e.target.composing !== true) {\n        return;\n      }\n\n      e.target.composing = false;\n\n      this.__onInput(e);\n    },\n    __onChange: function __onChange(e) {\n      this.__onCompositionEnd(e);\n\n      clearTimeout(this.emitTimer);\n      this.emitValueFn !== void 0 && this.emitValueFn();\n      this.$emit('change', e);\n    },\n    __onFinishEditing: function __onFinishEditing(e) {\n      var _this2 = this;\n\n      e !== void 0 && stop(e);\n      clearTimeout(this.emitTimer);\n      this.emitValueFn !== void 0 && this.emitValueFn();\n      this.typedNumber = false;\n      this.stopValueWatcher = false;\n      delete this.tempValue;\n      this.type !== 'file' && this.$nextTick(function () {\n        if (_this2.$refs.input !== void 0) {\n          _this2.$refs.input.value = _this2.innerValue;\n        }\n      });\n    },\n    __getControl: function __getControl(h) {\n      var on = _objectSpread({}, this.$listeners, {\n        input: this.__onInput,\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        change: this.__onChange,\n        compositionstart: this.__onCompositionStart,\n        compositionend: this.__onCompositionEnd,\n        blur: this.__onFinishEditing,\n        focus: stop\n      });\n\n      if (this.$q.platform.is.android === true) {\n        on.compositionupdate = this.__onCompositionUpdate;\n      }\n\n      if (this.hasMask === true) {\n        on.keydown = this.__onMaskedKeydown;\n      }\n\n      var attrs = _objectSpread({\n        tabindex: 0,\n        autofocus: this.autofocus,\n        rows: this.type === 'textarea' ? 6 : void 0,\n        'aria-label': this.label\n      }, this.$attrs, {\n        id: this.targetUid,\n        type: this.type,\n        maxlength: this.maxlength,\n        disabled: this.disable === true,\n        readonly: this.readonly === true\n      });\n\n      if (this.autogrow === true) {\n        attrs.rows = 1;\n      }\n\n      return h(this.isTextarea === true ? 'textarea' : 'input', {\n        ref: 'input',\n        staticClass: 'q-field__native q-placeholder',\n        style: this.inputStyle,\n        class: this.inputClass,\n        attrs: attrs,\n        on: on,\n        domProps: this.type !== 'file' ? {\n          value: this.hasOwnProperty('tempValue') === true ? this.tempValue : this.innerValue\n        } : null\n      });\n    }\n  },\n  created: function created() {\n    // textarea only\n    this.__adjustHeightDebounce = debounce(this.__adjustHeight, 100);\n  },\n  mounted: function mounted() {\n    // textarea only\n    this.autogrow === true && this.__adjustHeight();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.__onFinishEditing();\n  }\n});",{"version":3,"sources":["/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/components/input/QInput.js"],"names":["Vue","QField","MaskMixin","debounce","stop","extend","name","mixins","props","value","required","type","String","default","Number","maxlength","autogrow","Boolean","inputClass","Array","Object","inputStyle","watch","v","hasMask","stopValueWatcher","__updateMaskValue","innerValue","hasOwnProperty","typedNumber","tempValue","$nextTick","__adjustHeightDebounce","$attrs","rows","$refs","input","inp","style","height","dense","__adjustHeight","data","__getInitialMaskedValue","computed","isTextarea","fieldClass","methods","focus","el","document","activeElement","id","targetUid","select","__onInput","e","target","composing","$emit","files","val","__emitValue","stopWatcher","emitValueFn","clearTimeout","emitTimer","setTimeout","scrollHeight","__onCompositionStart","__onCompositionUpdate","codePointAt","__onCompositionEnd","__onChange","__onFinishEditing","__getControl","h","on","$listeners","change","compositionstart","compositionend","blur","$q","platform","is","android","compositionupdate","keydown","__onMaskedKeydown","attrs","tabindex","autofocus","label","disabled","disable","readonly","ref","staticClass","class","domProps","created","mounted","beforeDestroy"],"mappings":"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","sourcesContent":["import Vue from 'vue'\n\nimport QField from '../field/QField.js'\n\nimport MaskMixin from '../../mixins/mask.js'\nimport debounce from '../../utils/debounce.js'\nimport { stop } from '../../utils/event.js'\n\nexport default Vue.extend({\n  name: 'QInput',\n\n  mixins: [ QField, MaskMixin ],\n\n  props: {\n    value: { required: false },\n\n    type: {\n      type: String,\n      default: 'text'\n    },\n\n    debounce: [String, Number],\n\n    maxlength: [Number, String],\n    autogrow: Boolean, // makes a textarea\n\n    inputClass: [Array, String, Object],\n    inputStyle: [Array, String, Object]\n  },\n\n  watch: {\n    value (v) {\n      if (this.hasMask === true) {\n        if (this.stopValueWatcher === true) {\n          this.stopValueWatcher = false\n          return\n        }\n\n        this.__updateMaskValue(v)\n      }\n      else if (this.innerValue !== v) {\n        this.innerValue = v\n\n        if (\n          this.type === 'number' &&\n          this.hasOwnProperty('tempValue') === true\n        ) {\n          if (this.typedNumber === true) {\n            this.typedNumber = false\n          }\n          else {\n            delete this.tempValue\n          }\n        }\n      }\n\n      // textarea only\n      this.autogrow === true && this.$nextTick(this.__adjustHeightDebounce)\n    },\n\n    autogrow (autogrow) {\n      // textarea only\n      if (autogrow === true) {\n        this.$nextTick(this.__adjustHeightDebounce)\n      }\n      // if it has a number of rows set respect it\n      else if (this.$attrs.rows > 0 && this.$refs.input !== void 0) {\n        const inp = this.$refs.input\n        inp.style.height = 'auto'\n      }\n    },\n\n    dense () {\n      this.autogrow === true && this.$nextTick(this.__adjustHeight)\n    }\n  },\n\n  data () {\n    return { innerValue: this.__getInitialMaskedValue() }\n  },\n\n  computed: {\n    isTextarea () {\n      return this.type === 'textarea' || this.autogrow === true\n    },\n\n    fieldClass () {\n      return `q-${this.isTextarea === true ? 'textarea' : 'input'}` +\n        (this.autogrow === true ? ' q-textarea--autogrow' : '')\n    }\n  },\n\n  methods: {\n    focus () {\n      const el = document.activeElement\n      if (\n        this.$refs.input !== void 0 &&\n        this.$refs.input !== el &&\n        // IE can have null document.activeElement\n        (el === null || el.id !== this.targetUid)\n      ) {\n        this.$refs.input.focus()\n      }\n    },\n\n    select () {\n      this.$refs.input !== void 0 && this.$refs.input.select()\n    },\n\n    __onInput (e) {\n      if (e && e.target && e.target.composing === true) {\n        return\n      }\n\n      if (this.type === 'file') {\n        this.$emit('input', e.target.files)\n        return\n      }\n\n      const val = e.target.value\n\n      if (this.hasMask === true) {\n        this.__updateMaskValue(val)\n      }\n      else {\n        this.__emitValue(val)\n      }\n\n      // we need to trigger it immediately too,\n      // to avoid \"flickering\"\n      this.autogrow === true && this.__adjustHeight()\n    },\n\n    __emitValue (val, stopWatcher) {\n      this.emitValueFn = () => {\n        if (\n          this.type !== 'number' &&\n          this.hasOwnProperty('tempValue') === true\n        ) {\n          delete this.tempValue\n        }\n\n        if (this.value !== val) {\n          stopWatcher === true && (this.stopValueWatcher = true)\n          this.$emit('input', val)\n        }\n\n        this.emitValueFn = void 0\n      }\n\n      if (this.type === 'number') {\n        this.typedNumber = true\n        this.tempValue = val\n      }\n\n      if (this.debounce !== void 0) {\n        clearTimeout(this.emitTimer)\n        this.tempValue = val\n        this.emitTimer = setTimeout(this.emitValueFn, this.debounce)\n      }\n      else {\n        this.emitValueFn()\n      }\n    },\n\n    // textarea only\n    __adjustHeight () {\n      const inp = this.$refs.input\n      if (inp !== void 0) {\n        inp.style.height = '1px'\n        inp.style.height = inp.scrollHeight + 'px'\n      }\n    },\n\n    __onCompositionStart (e) {\n      e.target.composing = true\n    },\n\n    __onCompositionUpdate (e) {\n      if (typeof e.data === 'string' && e.data.codePointAt(0) < 256) {\n        e.target.composing = false\n      }\n    },\n\n    __onCompositionEnd (e) {\n      if (e.target.composing !== true) { return }\n      e.target.composing = false\n\n      this.__onInput(e)\n    },\n\n    __onChange (e) {\n      this.__onCompositionEnd(e)\n\n      clearTimeout(this.emitTimer)\n      this.emitValueFn !== void 0 && this.emitValueFn()\n\n      this.$emit('change', e)\n    },\n\n    __onFinishEditing (e) {\n      e !== void 0 && stop(e)\n\n      clearTimeout(this.emitTimer)\n      this.emitValueFn !== void 0 && this.emitValueFn()\n\n      this.typedNumber = false\n      this.stopValueWatcher = false\n      delete this.tempValue\n\n      this.type !== 'file' && this.$nextTick(() => {\n        if (this.$refs.input !== void 0) {\n          this.$refs.input.value = this.innerValue\n        }\n      })\n    },\n\n    __getControl (h) {\n      const on = {\n        ...this.$listeners,\n        input: this.__onInput,\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        change: this.__onChange,\n        compositionstart: this.__onCompositionStart,\n        compositionend: this.__onCompositionEnd,\n        blur: this.__onFinishEditing,\n        focus: stop\n      }\n\n      if (this.$q.platform.is.android === true) {\n        on.compositionupdate = this.__onCompositionUpdate\n      }\n\n      if (this.hasMask === true) {\n        on.keydown = this.__onMaskedKeydown\n      }\n\n      const attrs = {\n        tabindex: 0,\n        autofocus: this.autofocus,\n        rows: this.type === 'textarea' ? 6 : void 0,\n        'aria-label': this.label,\n        ...this.$attrs,\n        id: this.targetUid,\n        type: this.type,\n        maxlength: this.maxlength,\n        disabled: this.disable === true,\n        readonly: this.readonly === true\n      }\n\n      if (this.autogrow === true) {\n        attrs.rows = 1\n      }\n\n      return h(this.isTextarea === true ? 'textarea' : 'input', {\n        ref: 'input',\n        staticClass: 'q-field__native q-placeholder',\n        style: this.inputStyle,\n        class: this.inputClass,\n        attrs,\n        on,\n        domProps: this.type !== 'file'\n          ? {\n            value: this.hasOwnProperty('tempValue') === true\n              ? this.tempValue\n              : this.innerValue\n          }\n          : null\n      })\n    }\n  },\n\n  created () {\n    // textarea only\n    this.__adjustHeightDebounce = debounce(this.__adjustHeight, 100)\n  },\n\n  mounted () {\n    // textarea only\n    this.autogrow === true && this.__adjustHeight()\n  },\n\n  beforeDestroy () {\n    this.__onFinishEditing()\n  }\n})\n"]}]}