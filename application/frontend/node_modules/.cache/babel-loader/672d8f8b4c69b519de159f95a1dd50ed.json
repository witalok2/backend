{"remainingRequest":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js!/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/mixins/checkbox.js","dependencies":[{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/mixins/checkbox.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport { stopAndPrevent } from \"../utils/event.js\";\nexport default {\n  props: {\n    value: {\n      required: true\n    },\n    val: {},\n    trueValue: {\n      default: true\n    },\n    falseValue: {\n      default: false\n    },\n    label: String,\n    leftLabel: Boolean,\n    color: String,\n    keepColor: Boolean,\n    dark: Boolean,\n    dense: Boolean,\n    disable: Boolean,\n    tabindex: [String, Number]\n  },\n  computed: {\n    isTrue: function isTrue() {\n      return this.modelIsArray ? this.index > -1 : this.value === this.trueValue;\n    },\n    isFalse: function isFalse() {\n      return this.modelIsArray ? this.index === -1 : this.value === this.falseValue;\n    },\n    index: function index() {\n      if (this.modelIsArray === true) {\n        return this.value.indexOf(this.val);\n      }\n    },\n    modelIsArray: function modelIsArray() {\n      return Array.isArray(this.value);\n    },\n    computedTabindex: function computedTabindex() {\n      return this.disable === true ? -1 : this.tabindex || 0;\n    }\n  },\n  methods: {\n    toggle: function toggle(e) {\n      e !== void 0 && stopAndPrevent(e);\n\n      if (this.disable === true) {\n        return;\n      }\n\n      var val;\n\n      if (this.modelIsArray === true) {\n        if (this.isTrue === true) {\n          val = this.value.slice();\n          val.splice(this.index, 1);\n        } else {\n          val = this.value.concat(this.val);\n        }\n      } else if (this.isTrue === true) {\n        val = this.toggleIndeterminate ? this.indeterminateValue : this.falseValue;\n      } else if (this.isFalse === true) {\n        val = this.trueValue;\n      } else {\n        val = this.falseValue;\n      }\n\n      this.$emit('input', val);\n    },\n    __keyDown: function __keyDown(e) {\n      if (e.keyCode === 13 || e.keyCode === 32) {\n        this.toggle(e);\n      }\n    }\n  }\n};",{"version":3,"sources":["/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/mixins/checkbox.js"],"names":["stopAndPrevent","props","value","required","val","trueValue","default","falseValue","label","String","leftLabel","Boolean","color","keepColor","dark","dense","disable","tabindex","Number","computed","isTrue","modelIsArray","index","isFalse","indexOf","Array","isArray","computedTabindex","methods","toggle","e","slice","splice","concat","toggleIndeterminate","indeterminateValue","$emit","__keyDown","keyCode"],"mappings":"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","sourcesContent":["import { stopAndPrevent } from '../utils/event.js'\n\nexport default {\n  props: {\n    value: {\n      required: true\n    },\n    val: {},\n\n    trueValue: { default: true },\n    falseValue: { default: false },\n\n    label: String,\n    leftLabel: Boolean,\n\n    color: String,\n    keepColor: Boolean,\n    dark: Boolean,\n    dense: Boolean,\n\n    disable: Boolean,\n    tabindex: [String, Number]\n  },\n\n  computed: {\n    isTrue () {\n      return this.modelIsArray\n        ? this.index > -1\n        : this.value === this.trueValue\n    },\n\n    isFalse () {\n      return this.modelIsArray\n        ? this.index === -1\n        : this.value === this.falseValue\n    },\n\n    index () {\n      if (this.modelIsArray === true) {\n        return this.value.indexOf(this.val)\n      }\n    },\n\n    modelIsArray () {\n      return Array.isArray(this.value)\n    },\n\n    computedTabindex () {\n      return this.disable === true ? -1 : this.tabindex || 0\n    }\n  },\n\n  methods: {\n    toggle (e) {\n      e !== void 0 && stopAndPrevent(e)\n\n      if (this.disable === true) {\n        return\n      }\n\n      let val\n\n      if (this.modelIsArray === true) {\n        if (this.isTrue === true) {\n          val = this.value.slice()\n          val.splice(this.index, 1)\n        }\n        else {\n          val = this.value.concat(this.val)\n        }\n      }\n      else if (this.isTrue === true) {\n        val = this.toggleIndeterminate ? this.indeterminateValue : this.falseValue\n      }\n      else if (this.isFalse === true) {\n        val = this.trueValue\n      }\n      else {\n        val = this.falseValue\n      }\n\n      this.$emit('input', val)\n    },\n\n    __keyDown (e) {\n      if (e.keyCode === 13 || e.keyCode === 32) {\n        this.toggle(e)\n      }\n    }\n  }\n}\n"]}]}