{"remainingRequest":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js!/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/components/fab/QFab.js","dependencies":[{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/components/fab/QFab.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Vue from 'vue';\nimport QBtn from \"../btn/QBtn.js\";\nimport QIcon from \"../icon/QIcon.js\";\nimport FabMixin from \"./fab-mixin.js\";\nimport ModelToggleMixin from \"../../mixins/model-toggle.js\";\nimport slot from \"../../utils/slot.js\";\nexport default Vue.extend({\n  name: 'QFab',\n  mixins: [FabMixin, ModelToggleMixin],\n  provide: function provide() {\n    var _this = this;\n\n    return {\n      __qFabClose: function __qFabClose(evt) {\n        _this.hide(evt);\n\n        _this.$refs.trigger && _this.$refs.trigger.$el && _this.$refs.trigger.$el.focus();\n      }\n    };\n  },\n  props: {\n    icon: String,\n    activeIcon: String,\n    direction: {\n      type: String,\n      default: 'right',\n      validator: function validator(v) {\n        return ['up', 'right', 'down', 'left'].includes(v);\n      }\n    },\n    persistent: Boolean\n  },\n  data: function data() {\n    return {\n      showing: this.value\n    };\n  },\n  computed: {\n    hideOnRouteChange: function hideOnRouteChange() {\n      return this.persistent !== true;\n    }\n  },\n  render: function render(h) {\n    var tooltip = this.$scopedSlots.tooltip !== void 0 ? this.$scopedSlots.tooltip() : [];\n    return h('div', {\n      staticClass: 'q-fab z-fab row inline justify-center',\n      class: this.showing === true ? 'q-fab--opened' : null,\n      on: this.$listeners\n    }, [h(QBtn, {\n      ref: 'trigger',\n      props: _objectSpread({}, this.$props, {\n        icon: void 0,\n        fab: true\n      }),\n      on: {\n        click: this.toggle\n      }\n    }, tooltip.concat([h(QIcon, {\n      staticClass: 'q-fab__icon absolute-full',\n      props: {\n        name: this.icon || this.$q.iconSet.fab.icon\n      }\n    }), h(QIcon, {\n      staticClass: 'q-fab__active-icon absolute-full',\n      props: {\n        name: this.activeIcon || this.$q.iconSet.fab.activeIcon\n      }\n    })])), h('div', {\n      staticClass: 'q-fab__actions flex no-wrap inline items-center',\n      class: \"q-fab__actions--\".concat(this.direction)\n    }, slot(this, 'default'))]);\n  }\n});",{"version":3,"sources":["/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/components/fab/QFab.js"],"names":["Vue","QBtn","QIcon","FabMixin","ModelToggleMixin","slot","extend","name","mixins","provide","__qFabClose","evt","hide","$refs","trigger","$el","focus","props","icon","String","activeIcon","direction","type","default","validator","v","includes","persistent","Boolean","data","showing","value","computed","hideOnRouteChange","render","h","tooltip","$scopedSlots","staticClass","class","on","$listeners","ref","$props","fab","click","toggle","concat","$q","iconSet"],"mappings":"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","sourcesContent":["import Vue from 'vue'\n\nimport QBtn from '../btn/QBtn.js'\nimport QIcon from '../icon/QIcon.js'\nimport FabMixin from './fab-mixin.js'\nimport ModelToggleMixin from '../../mixins/model-toggle.js'\nimport slot from '../../utils/slot.js'\n\nexport default Vue.extend({\n  name: 'QFab',\n\n  mixins: [ FabMixin, ModelToggleMixin ],\n\n  provide () {\n    return {\n      __qFabClose: evt => {\n        this.hide(evt)\n        this.$refs.trigger && this.$refs.trigger.$el && this.$refs.trigger.$el.focus()\n      }\n    }\n  },\n\n  props: {\n    icon: String,\n    activeIcon: String,\n    direction: {\n      type: String,\n      default: 'right',\n      validator: v => ['up', 'right', 'down', 'left'].includes(v)\n    },\n    persistent: Boolean\n  },\n\n  data () {\n    return {\n      showing: this.value\n    }\n  },\n\n  computed: {\n    hideOnRouteChange () {\n      return this.persistent !== true\n    }\n  },\n\n  render (h) {\n    const tooltip = this.$scopedSlots.tooltip !== void 0\n      ? this.$scopedSlots.tooltip()\n      : []\n\n    return h('div', {\n      staticClass: 'q-fab z-fab row inline justify-center',\n      class: this.showing === true ? 'q-fab--opened' : null,\n      on: this.$listeners\n    }, [\n      h(QBtn, {\n        ref: 'trigger',\n        props: {\n          ...this.$props,\n          icon: void 0,\n          fab: true\n        },\n        on: {\n          click: this.toggle\n        }\n      }, tooltip.concat([\n        h(QIcon, {\n          staticClass: 'q-fab__icon absolute-full',\n          props: { name: this.icon || this.$q.iconSet.fab.icon }\n        }),\n        h(QIcon, {\n          staticClass: 'q-fab__active-icon absolute-full',\n          props: { name: this.activeIcon || this.$q.iconSet.fab.activeIcon }\n        })\n      ])),\n\n      h('div', {\n        staticClass: 'q-fab__actions flex no-wrap inline items-center',\n        class: `q-fab__actions--${this.direction}`\n      }, slot(this, 'default'))\n    ])\n  }\n})\n"]}]}