{"remainingRequest":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js!/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/components/badge/QBadge.js","dependencies":[{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/components/badge/QBadge.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.number.constructor\";\nimport Vue from 'vue';\nimport slot from \"../../utils/slot.js\";\nexport default Vue.extend({\n  name: 'QBadge',\n  props: {\n    color: String,\n    textColor: String,\n    floating: Boolean,\n    transparent: Boolean,\n    multiLine: Boolean,\n    label: [Number, String],\n    align: {\n      type: String,\n      validator: function validator(v) {\n        return ['top', 'middle', 'bottom'].includes(v);\n      }\n    }\n  },\n  computed: {\n    style: function style() {\n      if (this.align !== void 0) {\n        return {\n          verticalAlign: this.align\n        };\n      }\n    },\n    classes: function classes() {\n      return 'q-badge flex inline items-center no-wrap' + \" q-badge--\".concat(this.multiLine === true ? 'multi' : 'single', \"-line\") + (this.color !== void 0 ? \" bg-\".concat(this.color) : '') + (this.textColor !== void 0 ? \" text-\".concat(this.textColor) : '') + (this.floating === true ? ' q-badge--floating' : '') + (this.transparent === true ? ' q-badge--transparent' : '');\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      style: this.style,\n      class: this.classes,\n      on: this.$listeners\n    }, this.label !== void 0 ? [this.label] : slot(this, 'default'));\n  }\n});",{"version":3,"sources":["/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/components/badge/QBadge.js"],"names":["Vue","slot","extend","name","props","color","String","textColor","floating","Boolean","transparent","multiLine","label","Number","align","type","validator","v","includes","computed","style","verticalAlign","classes","render","h","class","on","$listeners"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,OAAOC,IAAP;AAEA,eAAeD,GAAG,CAACE,MAAJ,CAAW;AACxBC,EAAAA,IAAI,EAAE,QADkB;AAGxBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEC,MADF;AAELC,IAAAA,SAAS,EAAED,MAFN;AAILE,IAAAA,QAAQ,EAAEC,OAJL;AAKLC,IAAAA,WAAW,EAAED,OALR;AAMLE,IAAAA,SAAS,EAAEF,OANN;AAQLG,IAAAA,KAAK,EAAE,CAACC,MAAD,EAASP,MAAT,CARF;AAULQ,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAET,MADD;AAELU,MAAAA,SAAS,EAAE,mBAAAC,CAAC;AAAA,eAAI,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,EAA4BC,QAA5B,CAAqCD,CAArC,CAAJ;AAAA;AAFP;AAVF,GAHiB;AAmBxBE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KADQ,mBACC;AACP,UAAI,KAAKN,KAAL,KAAe,KAAK,CAAxB,EAA2B;AACzB,eAAO;AAAEO,UAAAA,aAAa,EAAE,KAAKP;AAAtB,SAAP;AACD;AACF,KALO;AAORQ,IAAAA,OAPQ,qBAOG;AACT,aAAO,iEACQ,KAAKX,SAAL,KAAmB,IAAnB,GAA0B,OAA1B,GAAoC,QAD5C,cAEJ,KAAKN,KAAL,KAAe,KAAK,CAApB,iBAA+B,KAAKA,KAApC,IAA8C,EAF1C,KAGJ,KAAKE,SAAL,KAAmB,KAAK,CAAxB,mBAAqC,KAAKA,SAA1C,IAAwD,EAHpD,KAIJ,KAAKC,QAAL,KAAkB,IAAlB,GAAyB,oBAAzB,GAAgD,EAJ5C,KAKJ,KAAKE,WAAL,KAAqB,IAArB,GAA4B,uBAA5B,GAAsD,EALlD,CAAP;AAMD;AAdO,GAnBc;AAoCxBa,EAAAA,MApCwB,kBAoChBC,CApCgB,EAoCb;AACT,WAAOA,CAAC,CAAC,KAAD,EAAQ;AACdJ,MAAAA,KAAK,EAAE,KAAKA,KADE;AAEdK,MAAAA,KAAK,EAAE,KAAKH,OAFE;AAGdI,MAAAA,EAAE,EAAE,KAAKC;AAHK,KAAR,EAIL,KAAKf,KAAL,KAAe,KAAK,CAApB,GAAwB,CAAE,KAAKA,KAAP,CAAxB,GAAyCX,IAAI,CAAC,IAAD,EAAO,SAAP,CAJxC,CAAR;AAKD;AA1CuB,CAAX,CAAf","sourcesContent":["import Vue from 'vue'\n\nimport slot from '../../utils/slot.js'\n\nexport default Vue.extend({\n  name: 'QBadge',\n\n  props: {\n    color: String,\n    textColor: String,\n\n    floating: Boolean,\n    transparent: Boolean,\n    multiLine: Boolean,\n\n    label: [Number, String],\n\n    align: {\n      type: String,\n      validator: v => ['top', 'middle', 'bottom'].includes(v)\n    }\n  },\n\n  computed: {\n    style () {\n      if (this.align !== void 0) {\n        return { verticalAlign: this.align }\n      }\n    },\n\n    classes () {\n      return 'q-badge flex inline items-center no-wrap' +\n        ` q-badge--${this.multiLine === true ? 'multi' : 'single'}-line` +\n        (this.color !== void 0 ? ` bg-${this.color}` : '') +\n        (this.textColor !== void 0 ? ` text-${this.textColor}` : '') +\n        (this.floating === true ? ' q-badge--floating' : '') +\n        (this.transparent === true ? ' q-badge--transparent' : '')\n    }\n  },\n\n  render (h) {\n    return h('div', {\n      style: this.style,\n      class: this.classes,\n      on: this.$listeners\n    }, this.label !== void 0 ? [ this.label ] : slot(this, 'default'))\n  }\n})\n"]}]}