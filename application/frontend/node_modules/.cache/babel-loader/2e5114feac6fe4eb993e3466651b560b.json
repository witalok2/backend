{"remainingRequest":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js!/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/components/avatar/QAvatar.js","dependencies":[{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/components/avatar/QAvatar.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Vue from 'vue';\nimport SizeMixin from \"../../mixins/size.js\";\nimport QIcon from \"../icon/QIcon.js\";\nimport slot from \"../../utils/slot.js\";\nexport default Vue.extend({\n  name: 'QAvatar',\n  mixins: [SizeMixin],\n  props: {\n    fontSize: String,\n    color: String,\n    textColor: String,\n    icon: String,\n    square: Boolean,\n    rounded: Boolean\n  },\n  computed: {\n    contentClass: function contentClass() {\n      var _ref;\n\n      return _ref = {}, _defineProperty(_ref, \"bg-\".concat(this.color), this.color), _defineProperty(_ref, \"text-\".concat(this.textColor, \" q-chip--colored\"), this.textColor), _defineProperty(_ref, 'q-avatar__content--square', this.square), _defineProperty(_ref, 'rounded-borders', this.rounded), _ref;\n    },\n    contentStyle: function contentStyle() {\n      if (this.fontSize) {\n        return {\n          fontSize: this.fontSize\n        };\n      }\n    }\n  },\n  methods: {\n    __getContent: function __getContent(h) {\n      return this.icon !== void 0 ? [h(QIcon, {\n        props: {\n          name: this.icon\n        }\n      })].concat(slot(this, 'default')) : slot(this, 'default');\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      staticClass: 'q-avatar',\n      style: this.sizeStyle,\n      on: this.$listeners\n    }, [h('div', {\n      staticClass: 'q-avatar__content row flex-center overflow-hidden',\n      class: this.contentClass,\n      style: this.contentStyle\n    }, [this.__getContent(h)])]);\n  }\n});",{"version":3,"sources":["/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/components/avatar/QAvatar.js"],"names":["Vue","SizeMixin","QIcon","slot","extend","name","mixins","props","fontSize","String","color","textColor","icon","square","Boolean","rounded","computed","contentClass","contentStyle","methods","__getContent","h","concat","render","staticClass","style","sizeStyle","on","$listeners","class"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,OAAOC,SAAP;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AAEA,eAAeH,GAAG,CAACI,MAAJ,CAAW;AACxBC,EAAAA,IAAI,EAAE,SADkB;AAGxBC,EAAAA,MAAM,EAAE,CAAEL,SAAF,CAHgB;AAKxBM,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAEC,MADL;AAGLC,IAAAA,KAAK,EAAED,MAHF;AAILE,IAAAA,SAAS,EAAEF,MAJN;AAMLG,IAAAA,IAAI,EAAEH,MAND;AAOLI,IAAAA,MAAM,EAAEC,OAPH;AAQLC,IAAAA,OAAO,EAAED;AARJ,GALiB;AAgBxBE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YADQ,0BACQ;AAAA;;AACd,2DACS,KAAKP,KADd,GACwB,KAAKA,KAD7B,wCAEW,KAAKC,SAFhB,uBAE8C,KAAKA,SAFnD,yBAGE,2BAHF,EAG+B,KAAKE,MAHpC,yBAIE,iBAJF,EAIqB,KAAKE,OAJ1B;AAMD,KARO;AAURG,IAAAA,YAVQ,0BAUQ;AACd,UAAI,KAAKV,QAAT,EAAmB;AACjB,eAAO;AAAEA,UAAAA,QAAQ,EAAE,KAAKA;AAAjB,SAAP;AACD;AACF;AAdO,GAhBc;AAiCxBW,EAAAA,OAAO,EAAE;AACPC,IAAAA,YADO,wBACOC,CADP,EACU;AACf,aAAO,KAAKT,IAAL,KAAc,KAAK,CAAnB,GACH,CAAES,CAAC,CAACnB,KAAD,EAAQ;AAAEK,QAAAA,KAAK,EAAE;AAAEF,UAAAA,IAAI,EAAE,KAAKO;AAAb;AAAT,OAAR,CAAH,EAA6CU,MAA7C,CAAoDnB,IAAI,CAAC,IAAD,EAAO,SAAP,CAAxD,CADG,GAEHA,IAAI,CAAC,IAAD,EAAO,SAAP,CAFR;AAGD;AALM,GAjCe;AAyCxBoB,EAAAA,MAzCwB,kBAyChBF,CAzCgB,EAyCb;AACT,WAAOA,CAAC,CAAC,KAAD,EAAQ;AACdG,MAAAA,WAAW,EAAE,UADC;AAEdC,MAAAA,KAAK,EAAE,KAAKC,SAFE;AAGdC,MAAAA,EAAE,EAAE,KAAKC;AAHK,KAAR,EAIL,CACDP,CAAC,CAAC,KAAD,EAAQ;AACPG,MAAAA,WAAW,EAAE,mDADN;AAEPK,MAAAA,KAAK,EAAE,KAAKZ,YAFL;AAGPQ,MAAAA,KAAK,EAAE,KAAKP;AAHL,KAAR,EAIE,CACD,KAAKE,YAAL,CAAkBC,CAAlB,CADC,CAJF,CADA,CAJK,CAAR;AAaD;AAvDuB,CAAX,CAAf","sourcesContent":["import Vue from 'vue'\n\nimport SizeMixin from '../../mixins/size.js'\nimport QIcon from '../icon/QIcon.js'\nimport slot from '../../utils/slot.js'\n\nexport default Vue.extend({\n  name: 'QAvatar',\n\n  mixins: [ SizeMixin ],\n\n  props: {\n    fontSize: String,\n\n    color: String,\n    textColor: String,\n\n    icon: String,\n    square: Boolean,\n    rounded: Boolean\n  },\n\n  computed: {\n    contentClass () {\n      return {\n        [`bg-${this.color}`]: this.color,\n        [`text-${this.textColor} q-chip--colored`]: this.textColor,\n        'q-avatar__content--square': this.square,\n        'rounded-borders': this.rounded\n      }\n    },\n\n    contentStyle () {\n      if (this.fontSize) {\n        return { fontSize: this.fontSize }\n      }\n    }\n  },\n\n  methods: {\n    __getContent (h) {\n      return this.icon !== void 0\n        ? [ h(QIcon, { props: { name: this.icon } }) ].concat(slot(this, 'default'))\n        : slot(this, 'default')\n    }\n  },\n\n  render (h) {\n    return h('div', {\n      staticClass: 'q-avatar',\n      style: this.sizeStyle,\n      on: this.$listeners\n    }, [\n      h('div', {\n        staticClass: 'q-avatar__content row flex-center overflow-hidden',\n        class: this.contentClass,\n        style: this.contentStyle\n      }, [\n        this.__getContent(h)\n      ])\n    ])\n  }\n})\n"]}]}