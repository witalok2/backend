{"remainingRequest":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js!/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/components/table/table-sort.js","dependencies":[{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/components/table/table-sort.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport { sortDate } from \"../../utils/sort.js\";\nimport { isNumber, isDate } from \"../../utils/is.js\";\nexport default {\n  props: {\n    sortMethod: {\n      type: Function,\n      default: function _default(data, sortBy, descending) {\n        var col = this.columns.find(function (def) {\n          return def.name === sortBy;\n        });\n\n        if (col === null || col.field === void 0) {\n          return data;\n        }\n\n        var dir = descending === true ? -1 : 1,\n            val = typeof col.field === 'function' ? function (v) {\n          return col.field(v);\n        } : function (v) {\n          return v[col.field];\n        };\n        return data.sort(function (a, b) {\n          var A = val(a),\n              B = val(b);\n\n          if (A === null || A === void 0) {\n            return -1 * dir;\n          }\n\n          if (B === null || B === void 0) {\n            return 1 * dir;\n          }\n\n          if (col.sort !== void 0) {\n            return col.sort(A, B, a, b) * dir;\n          }\n\n          if (isNumber(A) === true && isNumber(B) === true) {\n            return (A - B) * dir;\n          }\n\n          if (isDate(A) === true && isDate(B) === true) {\n            return sortDate(A, B) * dir;\n          }\n\n          if (typeof A === 'boolean' && typeof B === 'boolean') {\n            return (A - B) * dir;\n          }\n\n          var _map = [A, B].map(function (s) {\n            return (s + '').toLocaleString().toLowerCase();\n          });\n\n          var _map2 = _slicedToArray(_map, 2);\n\n          A = _map2[0];\n          B = _map2[1];\n          return A < B ? -1 * dir : A === B ? 0 : dir;\n        });\n      }\n    }\n  },\n  computed: {\n    columnToSort: function columnToSort() {\n      var sortBy = this.computedPagination.sortBy;\n\n      if (sortBy) {\n        return this.columns.find(function (def) {\n          return def.name === sortBy;\n        }) || null;\n      }\n    }\n  },\n  methods: {\n    sort: function sort(col\n    /* String(col name) or Object(col definition) */\n    ) {\n      if (col === Object(col)) {\n        col = col.name;\n      }\n\n      var _this$computedPaginat = this.computedPagination,\n          sortBy = _this$computedPaginat.sortBy,\n          descending = _this$computedPaginat.descending;\n\n      if (sortBy !== col) {\n        sortBy = col;\n        descending = false;\n      } else {\n        if (this.binaryStateSort === true) {\n          descending = !descending;\n        } else {\n          if (descending === true) {\n            sortBy = null;\n          } else {\n            descending = true;\n          }\n        }\n      }\n\n      this.setPagination({\n        sortBy: sortBy,\n        descending: descending,\n        page: 1\n      });\n    }\n  }\n};",{"version":3,"sources":["/home/witalo/go/src/github.com/witalok2/application/frontend/node_modules/quasar/src/components/table/table-sort.js"],"names":["sortDate","isNumber","isDate","props","sortMethod","type","Function","default","data","sortBy","descending","col","columns","find","def","name","field","dir","val","v","sort","a","b","A","B","map","s","toLocaleString","toLowerCase","computed","columnToSort","computedPagination","methods","Object","binaryStateSort","setPagination","page"],"mappings":"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","sourcesContent":["import { sortDate } from '../../utils/sort.js'\nimport { isNumber, isDate } from '../../utils/is.js'\n\nexport default {\n  props: {\n    sortMethod: {\n      type: Function,\n      default (data, sortBy, descending) {\n        const col = this.columns.find(def => def.name === sortBy)\n        if (col === null || col.field === void 0) {\n          return data\n        }\n\n        const\n          dir = descending === true ? -1 : 1,\n          val = typeof col.field === 'function'\n            ? v => col.field(v)\n            : v => v[col.field]\n\n        return data.sort((a, b) => {\n          let\n            A = val(a),\n            B = val(b)\n\n          if (A === null || A === void 0) {\n            return -1 * dir\n          }\n          if (B === null || B === void 0) {\n            return 1 * dir\n          }\n          if (col.sort !== void 0) {\n            return col.sort(A, B, a, b) * dir\n          }\n          if (isNumber(A) === true && isNumber(B) === true) {\n            return (A - B) * dir\n          }\n          if (isDate(A) === true && isDate(B) === true) {\n            return sortDate(A, B) * dir\n          }\n          if (typeof A === 'boolean' && typeof B === 'boolean') {\n            return (A - B) * dir\n          }\n\n          [A, B] = [A, B].map(s => (s + '').toLocaleString().toLowerCase())\n\n          return A < B\n            ? -1 * dir\n            : (A === B ? 0 : dir)\n        })\n      }\n    }\n  },\n\n  computed: {\n    columnToSort () {\n      const { sortBy } = this.computedPagination\n\n      if (sortBy) {\n        return this.columns.find(def => def.name === sortBy) || null\n      }\n    }\n  },\n\n  methods: {\n    sort (col /* String(col name) or Object(col definition) */) {\n      if (col === Object(col)) {\n        col = col.name\n      }\n\n      let { sortBy, descending } = this.computedPagination\n\n      if (sortBy !== col) {\n        sortBy = col\n        descending = false\n      }\n      else {\n        if (this.binaryStateSort === true) {\n          descending = !descending\n        }\n        else {\n          if (descending === true) {\n            sortBy = null\n          }\n          else {\n            descending = true\n          }\n        }\n      }\n\n      this.setPagination({ sortBy, descending, page: 1 })\n    }\n  }\n}\n"]}]}